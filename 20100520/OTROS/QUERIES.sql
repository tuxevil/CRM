-- LICENCE

SELECT 
LICENSE.DATA
FROM <ownerdatabase>.DBO.LICENSE

-- SMTP
SELECT 
MAILINGPARAMETERS.HOST, 
MAILINGPARAMETERS.PORT,  
MAILINGPARAMETERS.SERVERUSER, 
MAILINGPARAMETERS.SERVERPASSWORD, 
MAILINGPARAMETERS.USESSL, 
MAILINGPARAMETERS.USESPA 
FROM <ownerdatabase>.DBO.MAILINGPARAMETERS


-- CRMUSEREXIST
SELECT COUNT(*)
FROM <ownerdatabase>.DBO.USERS 
WHERE USERS.USER_LOGIN = '<user>'


-- USERBYNICK
SELECT 
USERS.USER_ID AS ID, 
USERS.TANGO_ID AS TANGOID, 
TGUSERS.NOMBREUSUARIO AS NICKNAME, 
TGUSERS.NOMBRECOMPLETO AS FULLNAME, 
TGUSERS.EMAIL AS MAIL 
FROM <ownerdatabase>.DBO.USERS 
INNER JOIN <dictionarydatabase>.DBO.USUARIO TGUSERS 
ON USERS.TANGO_ID = TGUSERS.IDUSUARIO 
INNER JOIN <ownerdatabase>.DBO.USERPROFILE 
ON USERS.USER_ID = USERPROFILE.USER_ID 
INNER JOIN <ownerdatabase>.DBO.PROFILES 
ON USERPROFILE.PRF_ID = PROFILES.PRF_ID 
WHERE USERS.USER_LOGIN = '<user>'

-- COMPANIESBYUSER
SELECT  
COMPANIES.ID_COMPANY AS ID, 
TGCOMPANIES.IDEMPRESA AS TANGOID, 
TGCOMPANIES.NOMBREEMPRESA AS NAME, 
TGCOMPANIES.NOMBREBD AS DBNAME, 
TGCOMPANIES.TIPOBD AS DBTYPE 
FROM  <dictionarydatabase>.DBO.EMPRESA TGCOMPANIES 
INNER JOIN <ownerdatabase>.DBO.COMPANIES 
ON TGCOMPANIES.IDEMPRESA = COMPANIES.TANGO_ID 
INNER JOIN <ownerdatabase>.DBO.USERPROFILE 
ON COMPANIES.ID_COMPANY = USERPROFILE.COMPANY_ID 
INNER JOIN <ownerdatabase>.DBO.PROFILES 
ON USERPROFILE.PRF_ID = PROFILES.PRF_ID 
INNER JOIN <ownerdatabase>.DBO.USERS 
ON USERS.USER_ID = USERPROFILE.USER_ID 
WHERE USERS.USER_ID = <user>

-- CstRCodes
SELECT  
CUSTOMERS.COD_CLIENT AS CODE  
FROM <database>.dbo.GVA14 CUSTOMERS
ORDER BY CUSTOMERS.COD_CLIENT

-- CstPCodes
SELECT  
CUSTOMERS.COD_CLIENT AS CODE  
FROM <ownerdatabase>.dbo.POTENTIALCUSTOMERS CUSTOMERS
WHERE COD_TANGO = ''
AND ID_COMPANY = <company>
ORDER BY CUSTOMERS.COD_CLIENT

-- UserCstRCodes
SELECT CUSTOMERS.COD_CLIENT COLLATE Latin1_General_BIN AS CODE  
FROM <database>.dbo.GVA14 CUSTOMERS 
WHERE CUSTOMERS.COD_CLIENT IN 
(
SELECT CUSTOMERCODE COLLATE Latin1_General_BIN 
FROM <ownerdatabase>.dbo.CUSTOMERDOMAIN 
WHERE USER_ID = <user> 
AND COMPANY_ID = <company>
)

-- UserCstPCodes
SELECT CUSTOMERS.COD_CLIENT COLLATE Latin1_General_BIN AS CODE  
FROM <ownerdatabase>.dbo.POTENTIALCUSTOMERS CUSTOMERS
WHERE COD_TANGO = ''
AND ID_COMPANY = <company>
AND CUSTOMERS.COD_CLIENT IN 
(
SELECT CUSTOMERCODE COLLATE Latin1_General_BIN 
FROM <ownerdatabase>.dbo.CUSTOMERDOMAIN 
WHERE USER_ID = <user> 
AND COMPANY_ID = <company>
)





-- CstRByCode
SELECT 
CUSTOMERS.ID_GVA14 AS ID,
CUSTOMERS.COD_CLIENT AS CODE,
'' AS TGCODE,
0 AS POTENTIAL,
CUSTOMERS.NOM_COM AS NAME,
CUSTOMERS.RAZON_SOCI AS LEGALNAME,
CUSTOMERS.DIR_COM AS ADRESS,
CUSTOMERS.DOMICILIO AS DELIVERYADRESS,
CUSTOMERS.C_POSTAL AS ZIPCODE,
CUSTOMERS.LOCALIDAD AS CITY,
CUSTOMERS.OBSERVACIO AS HOURS,
CUSTOMERS.TELEFONO_1 AS PHONE,
CUSTOMERS.TELEFONO_2 AS FAX,
CUSTOMERS.E_MAIL AS MAIL,
REALCUSTOMERS.WEB AS WEB,
CUSTOMERS.CUMPLEANIO AS BIRTHDAY,
CUSTOMERS.FECHA_ALTA AS REGISTRATIONDATE,
CUSTOMERS.FECHA_ALTA AS TGDATE,
CUSTOMERS.FECHA_INHA AS UNREGISTRATIONDATE,
CUSTOMERS.MON_CTE AS CURRENCYCODE,
CUSTOMERS.CLAUSULA AS CLAUSE,
CUSTOMERS.CUPO_CREDI AS CREDIT,
CUSTOMERS.PORC_DESC AS DISCOUNTPERCENT,
CUSTOMERS.TIPO_DOC AS IDCODE,
CUSTOMERS.CUIT AS CUIT,
CUSTOMERS.N_ING_BRUT AS IBNUMBER,
IVA.DESCRIPTION AS IVACATEGORY,
(CASE WHEN CUSTOMERS.IVA_L = 'S' THEN 1 ELSE 0 END) AS IVACALC,
(CASE WHEN CUSTOMERS.IVA_D  = 'S' THEN 1 ELSE 0 END) AS IVADETAIL,
(CASE WHEN CUSTOMERS.LIB = 'S' THEN 1 ELSE 0 END) AS IVAFREE,
CUSTOMERS.PORC_L AS IVAFREEPERCENT,
(CASE WHEN CUSTOMERS.SOBRE_IVA = 'S' THEN 1 ELSE 0 END) AS IVAPLUS,
CUSTOMERS.PORC_EXCL AS IVAEXCLUSIONPERCENT,
CUSTOMERS.IB_L AS IBCALC,
CUSTOMERS.ALI_FIJ_IB AS IBTAXCODE,
CUSTOMERS.ALI_ADI_IB AS IBTAXADITIONALCODE,
CUSTOMERS.IB_L3 AS IBBCALC,
CUSTOMERS.AL_FIJ_IB3 AS IBBTAXCODE,
CUSTOMERS.II_IB3 AS IBBINTERNALTAX,
(CASE WHEN CUSTOMERS.II_L  = 'S' THEN 1 ELSE 0 END) AS INTERNALTAXCALC,
(CASE WHEN CUSTOMERS.II_D  = 'S' THEN 1 ELSE 0 END) AS INTERNALTAXDETAIL,
(CASE WHEN CUSTOMERS.SOBRE_II  = 'S' THEN 1 ELSE 0 END) AS INTERNALTAXPLUS,
CUSTOMERS.ALI_NO_CAT  AS NCTAXCODE,
CUSTOMERS.EXPORTA AS EXPORT,
CUSTOMERS.COD_PROVIN AS STATECODE,
CUSTOMERS.COD_TRANSP AS TRANSPORTCODE,
CUSTOMERS.COD_VENDED AS EMPLOYEECODE,
CUSTOMERS.COD_ZONA AS ZONECODE,
CUSTOMERS.COND_VTA AS SALESTERMCODE,
CUSTOMERS.GRUPO_EMPR AS GROUPCODE,
CUSTOMERS.NRO_LISTA AS SALESLISTCODE
FROM <database>.dbo.GVA14 CUSTOMERS
INNER JOIN (
SELECT 'S' AS CATEGORY, 'RESPONSABLE INSCRIPTO' AS DESCRIPTION
UNION
SELECT 'N' AS CATEGORY, 'EXCENTO EN LAS COMPRAS' AS DESCRIPTION
UNION
SELECT 'I' AS CATEGORY, 'INSCRIPTO NO RESPONSABLE' AS DESCRIPTION
UNION
SELECT 'E' AS CATEGORY, 'EXCENTO EN LAS VENTAS' AS DESCRIPTION
UNION
SELECT 'M' AS CATEGORY, 'RESPONSABLE MONOTIBUTO' AS DESCRIPTION
UNION
SELECT 'C' AS CATEGORY, 'SUJETO NO CATEGORIZADO' AS DESCRIPTION
UNION
SELECT '' AS CATEGORY, '' AS DESCRIPTION
) IVA
ON CUSTOMERS.IVA_L = IVA.CATEGORY
LEFT OUTER JOIN <ownerdatabase>.DBO.REALCUSTOMERS
ON CUSTOMERS.COD_CLIENT = REALCUSTOMERS.COD_CLIENT COLLATE Latin1_General_BIN
AND REALCUSTOMERS.ID_COMPANY = <company>
WHERE CUSTOMERS.COD_CLIENT = '<code>'



-- CstPByCode
SELECT 
CUSTOMERS.ID_POTENTIALCUSTOMER AS ID,
CUSTOMERS.COD_CLIENT AS CODE,
CUSTOMERS.COD_TANGO  AS TGCODE,
1 AS POTENTIAL,
CUSTOMERS.NOM_COM AS NAME,
CUSTOMERS.RAZON_SOCI AS LEGALNAME,
CUSTOMERS.DIR_COM AS ADRESS,
CUSTOMERS.DOMICILIO AS DELIVERYADRESS,
CUSTOMERS.C_POSTAL AS ZIPCODE,
CUSTOMERS.LOCALIDAD AS CITY,
CUSTOMERS.OBSERVACIO AS HOURS,
CUSTOMERS.TELEFONO_1 AS PHONE,
CUSTOMERS.TELEFONO_2 AS FAX,
CUSTOMERS.E_MAIL AS MAIL,
CUSTOMERS.WEB AS WEB,
CUSTOMERS.CUMPLEANIO AS BIRTHDAY,
CUSTOMERS.FECHA_ALTA AS REGISTRATIONDATE,
CUSTOMERS.FECHA_ALTA AS TGDATE,
CUSTOMERS.FECHA_INHA AS UNREGISTRATIONDATE,
CUSTOMERS.MON_CTE AS CURRENCYCODE,
CUSTOMERS.CLAUSULA AS CLAUSE,
CUSTOMERS.CUPO_CREDI AS CREDIT,
CUSTOMERS.PORC_DESC AS DISCOUNTPERCENT,
CUSTOMERS.TIPO_DOC AS IDCODE,
CUSTOMERS.CUIT AS CUIT,
CUSTOMERS.N_ING_BRUT AS IBNUMBER,
IVA.DESCRIPTION AS IVACATEGORY,
(CASE WHEN CUSTOMERS.IVA_L = 'S' THEN 1 ELSE 0 END) AS IVACALC,
(CASE WHEN CUSTOMERS.IVA_D  = 'S' THEN 1 ELSE 0 END) AS IVADETAIL,
(CASE WHEN CUSTOMERS.LIB = 'S' THEN 1 ELSE 0 END) AS IVAFREE,
CUSTOMERS.PORC_L AS IVAFREEPERCENT,
(CASE WHEN CUSTOMERS.SOBRE_IVA = 'S' THEN 1 ELSE 0 END) AS IVAPLUS,
CUSTOMERS.PORC_EXCL AS IVAEXCLUSIONPERCENT,
CUSTOMERS.IB_L AS IBCALC,
CUSTOMERS.ALI_FIJ_IB AS IBTAXCODE,
CUSTOMERS.ALI_ADI_IB AS IBTAXADITIONALCODE,
CUSTOMERS.IB_L3 AS IBBCALC,
CUSTOMERS.AL_FIJ_IB3 AS IBBTAXCODE,
CUSTOMERS.II_IB3 AS IBBINTERNALTAX,
(CASE WHEN CUSTOMERS.II_L  = 'S' THEN 1 ELSE 0 END) AS INTERNALTAXCALC,
(CASE WHEN CUSTOMERS.II_D  = 'S' THEN 1 ELSE 0 END) AS INTERNALTAXDETAIL,
(CASE WHEN CUSTOMERS.SOBRE_II  = 'S' THEN 1 ELSE 0 END) AS INTERNALTAXPLUS,
CUSTOMERS.ALI_NO_CAT  AS NCTAXCODE,
CUSTOMERS.EXPORTA AS EXPORT,
CUSTOMERS.COD_PROVIN AS STATECODE,
CUSTOMERS.COD_TRANSP AS TRANSPORTCODE,
CUSTOMERS.COD_VENDED AS EMPLOYEECODE,
CUSTOMERS.COD_ZONA AS ZONECODE,
CUSTOMERS.COND_VTA AS SALESTERMCODE,
CUSTOMERS.GRUPO_EMPR AS GROUPCODE,
CUSTOMERS.NRO_LISTA AS SALESLISTCODE,
CUSTOMERS.NOTES AS NOTES
FROM <ownerdatabase>.dbo.POTENTIALCUSTOMERS CUSTOMERS
INNER JOIN (
SELECT 'S' AS CATEGORY, 'RESPONSABLE INSCRIPTO' AS DESCRIPTION
UNION
SELECT 'N' AS CATEGORY, 'EXCENTO EN LAS COMPRAS' AS DESCRIPTION
UNION
SELECT 'I' AS CATEGORY, 'INSCRIPTO NO RESPONSABLE' AS DESCRIPTION
UNION
SELECT 'E' AS CATEGORY, 'EXCENTO EN LAS VENTAS' AS DESCRIPTION
UNION
SELECT 'M' AS CATEGORY, 'RESPONSABLE MONOTIBUTO' AS DESCRIPTION
UNION
SELECT 'C' AS CATEGORY, 'SUJETO NO CATEGORIZADO' AS DESCRIPTION
UNION
SELECT '' AS CATEGORY, '' AS DESCRIPTION
) IVA
ON CUSTOMERS.IVA_L = IVA.CATEGORY
WHERE CUSTOMERS.COD_CLIENT = '<code>'

--USERDOMAINADD
IF NOT EXISTS
(
SELECT *
FROM <ownerdatabase>.DBO.CUSTOMERDOMAIN
WHERE USER_ID = <user>
AND COMPANY_ID = <company>
AND CUSTOMERCODE = '<customer>'
)
INSERT INTO <ownerdatabase>.DBO.CUSTOMERDOMAIN
(USER_ID, COMPANY_ID, CUSTOMERCODE) 
VALUES (<user>, <company>, '<customer>')


-- USERRCUSTOMERS
SELECT  
CUSTOMERS.COD_CLIENT AS CODE, 
CUSTOMERS.NOM_COM AS NAME, 
CUSTOMERS.RAZON_SOCI AS LEGALNAME, 
CUSTOMERS.CUIT AS CUIT, 
CUSTOMERS.DIR_COM AS ADRESS, 
CUSTOMERS.DOMICILIO AS DELIVERYADRESS, 
CUSTOMERS.C_POSTAL AS ZIPCODE, 
CUSTOMERS.LOCALIDAD AS CITY, 
STATES.NOMBRE_PRO AS STATENAME, 
TRANSPORTS.NOMBRE_TRA AS TRANSPORTNAME, 
EMPLOYEES.NOMBRE_VEN AS EMPLOYEENAME, 
ZONES.NOMBRE_ZON AS ZONENAME, 
SALESTERMS.DESC_COND AS SALESTERMNAME, 
GROUPS.NOMBRE_GRU AS GROUPNAME, 
SALESLIST.NOMBRE_LIS AS SALESLISTNAME, 
CUSTOMERS.PORC_DESC AS DISCOUNTPERCENT  
FROM <database>.dbo.GVA14 CUSTOMERS 
LEFT OUTER JOIN <database>.dbo.GVA18 STATES 
ON CUSTOMERS.COD_PROVIN = STATES.COD_PROVIN 
LEFT OUTER JOIN <database>.dbo.GVA24 TRANSPORTS 
ON CUSTOMERS.COD_TRANSP = TRANSPORTS.COD_TRANSP 
LEFT OUTER JOIN <database>.dbo.GVA23 EMPLOYEES 
ON CUSTOMERS.COD_VENDED = EMPLOYEES.COD_VENDED 
LEFT OUTER JOIN <database>.dbo.GVA05 ZONES 
ON CUSTOMERS.COD_ZONA = ZONES.COD_ZONA 
LEFT OUTER JOIN  
( 
SELECT COND_VTA, DESC_COND 
FROM <database>.dbo.GVA01  
GROUP BY COND_VTA, DESC_COND 
) SALESTERMS 
ON CUSTOMERS.COND_VTA = SALESTERMS.COND_VTA 
LEFT OUTER JOIN <database>.dbo.GVA62 GROUPS 
ON CUSTOMERS.GRUPO_EMPR = GROUPS.GRUPO_EMPR 
LEFT OUTER JOIN <database>.dbo.GVA10 SALESLIST 
ON CUSTOMERS.NRO_LISTA = SALESLIST.NRO_DE_LIS 
WHERE CUSTOMERS.COD_CLIENT IN 
( 
SELECT CUSTOMERCODE COLLATE Latin1_General_BIN 
FROM <ownerdatabase>.DBO.CUSTOMERDOMAIN 
WHERE USER_ID = <user> 
AND COMPANY_ID = <company> 
)

-- USERPCUSTOMERS
SELECT  
CUSTOMERS.COD_CLIENT AS CODE, 
CUSTOMERS.NOM_COM AS NAME, 
CUSTOMERS.RAZON_SOCI AS LEGALNAME, 
CUSTOMERS.CUIT AS CUIT, 
CUSTOMERS.DIR_COM AS ADRESS, 
CUSTOMERS.DOMICILIO AS DELIVERYADRESS, 
CUSTOMERS.C_POSTAL AS ZIPCODE, 
CUSTOMERS.LOCALIDAD AS CITY, 
STATES.NOMBRE_PRO AS STATENAME, 
TRANSPORTS.NOMBRE_TRA AS TRANSPORTNAME, 
EMPLOYEES.NOMBRE_VEN AS EMPLOYEENAME, 
ZONES.NOMBRE_ZON AS ZONENAME, 
SALESTERMS.DESC_COND AS SALESTERMNAME, 
GROUPS.NOMBRE_GRU AS GROUPNAME, 
SALESLIST.NOMBRE_LIS AS SALESLISTNAME, 
CUSTOMERS.PORC_DESC AS DISCOUNTPERCENT  
FROM <ownerdatabase>.dbo.POTENTIALCUSTOMERS CUSTOMERS 
LEFT OUTER JOIN <database>.dbo.GVA18 STATES 
ON CUSTOMERS.COD_PROVIN = STATES.COD_PROVIN 
LEFT OUTER JOIN <database>.dbo.GVA24 TRANSPORTS 
ON CUSTOMERS.COD_TRANSP = TRANSPORTS.COD_TRANSP 
LEFT OUTER JOIN <database>.dbo.GVA23 EMPLOYEES 
ON CUSTOMERS.COD_VENDED = EMPLOYEES.COD_VENDED 
LEFT OUTER JOIN <database>.dbo.GVA05 ZONES 
ON CUSTOMERS.COD_ZONA = ZONES.COD_ZONA 
LEFT OUTER JOIN  
( 
SELECT COND_VTA, DESC_COND 
FROM <database>.dbo.GVA01  
GROUP BY COND_VTA, DESC_COND 
) SALESTERMS 
ON CUSTOMERS.COND_VTA = SALESTERMS.COND_VTA 
LEFT OUTER JOIN <database>.dbo.GVA62 GROUPS 
ON CUSTOMERS.GRUPO_EMPR = GROUPS.GRUPO_EMPR 
LEFT OUTER JOIN <database>.dbo.GVA10 SALESLIST 
ON CUSTOMERS.NRO_LISTA = SALESLIST.NRO_DE_LIS 
WHERE COD_TANGO = ''
AND ID_COMPANY = <company>
AND CUSTOMERS.COD_CLIENT IN 
( 
SELECT CUSTOMERCODE COLLATE Latin1_General_BIN 
FROM <ownerdatabase>.DBO.CUSTOMERDOMAIN 
WHERE USER_ID = <user> 
AND COMPANY_ID = <company> 
)



-- RCUSTOMERS
SELECT  
CUSTOMERS.COD_CLIENT AS CODE, 
CUSTOMERS.NOM_COM AS NAME, 
CUSTOMERS.RAZON_SOCI AS LEGALNAME, 
CUSTOMERS.CUIT AS CUIT, 
CUSTOMERS.DIR_COM AS ADRESS, 
CUSTOMERS.DOMICILIO AS DELIVERYADRESS, 
CUSTOMERS.C_POSTAL AS ZIPCODE, 
CUSTOMERS.LOCALIDAD AS CITY, 
STATES.NOMBRE_PRO AS STATENAME, 
TRANSPORTS.NOMBRE_TRA AS TRANSPORTNAME, 
EMPLOYEES.NOMBRE_VEN AS EMPLOYEENAME, 
ZONES.NOMBRE_ZON AS ZONENAME, 
SALESTERMS.DESC_COND AS SALESTERMNAME, 
GROUPS.NOMBRE_GRU AS GROUPNAME, 
SALESLIST.NOMBRE_LIS AS SALESLISTNAME, 
CUSTOMERS.PORC_DESC AS DISCOUNTPERCENT  
FROM <database>.dbo.GVA14 CUSTOMERS 
LEFT OUTER JOIN <database>.dbo.GVA18 STATES 
ON CUSTOMERS.COD_PROVIN = STATES.COD_PROVIN 
LEFT OUTER JOIN <database>.dbo.GVA24 TRANSPORTS 
ON CUSTOMERS.COD_TRANSP = TRANSPORTS.COD_TRANSP 
LEFT OUTER JOIN <database>.dbo.GVA23 EMPLOYEES 
ON CUSTOMERS.COD_VENDED = EMPLOYEES.COD_VENDED 
LEFT OUTER JOIN <database>.dbo.GVA05 ZONES 
ON CUSTOMERS.COD_ZONA = ZONES.COD_ZONA 
LEFT OUTER JOIN  
( 
SELECT COND_VTA, DESC_COND 
FROM <database>.dbo.GVA01  
GROUP BY COND_VTA, DESC_COND 
) SALESTERMS 
ON CUSTOMERS.COND_VTA = SALESTERMS.COND_VTA 
LEFT OUTER JOIN <database>.dbo.GVA62 GROUPS 
ON CUSTOMERS.GRUPO_EMPR = GROUPS.GRUPO_EMPR 
LEFT OUTER JOIN <database>.dbo.GVA10 SALESLIST 
ON CUSTOMERS.NRO_LISTA = SALESLIST.NRO_DE_LIS 


-- PCUSTOMERS
SELECT  
CUSTOMERS.COD_CLIENT AS CODE, 
CUSTOMERS.NOM_COM AS NAME, 
CUSTOMERS.RAZON_SOCI AS LEGALNAME, 
CUSTOMERS.CUIT AS CUIT, 
CUSTOMERS.DIR_COM AS ADRESS, 
CUSTOMERS.DOMICILIO AS DELIVERYADRESS, 
CUSTOMERS.C_POSTAL AS ZIPCODE, 
CUSTOMERS.LOCALIDAD AS CITY, 
STATES.NOMBRE_PRO AS STATENAME, 
TRANSPORTS.NOMBRE_TRA AS TRANSPORTNAME, 
EMPLOYEES.NOMBRE_VEN AS EMPLOYEENAME, 
ZONES.NOMBRE_ZON AS ZONENAME, 
SALESTERMS.DESC_COND AS SALESTERMNAME, 
GROUPS.NOMBRE_GRU AS GROUPNAME, 
SALESLIST.NOMBRE_LIS AS SALESLISTNAME, 
CUSTOMERS.PORC_DESC AS DISCOUNTPERCENT  
FROM <ownerdatabase>.dbo.POTENTIALCUSTOMERS CUSTOMERS 
LEFT OUTER JOIN <database>.dbo.GVA18 STATES 
ON CUSTOMERS.COD_PROVIN = STATES.COD_PROVIN 
LEFT OUTER JOIN <database>.dbo.GVA24 TRANSPORTS 
ON CUSTOMERS.COD_TRANSP = TRANSPORTS.COD_TRANSP 
LEFT OUTER JOIN <database>.dbo.GVA23 EMPLOYEES 
ON CUSTOMERS.COD_VENDED = EMPLOYEES.COD_VENDED 
LEFT OUTER JOIN <database>.dbo.GVA05 ZONES 
ON CUSTOMERS.COD_ZONA = ZONES.COD_ZONA 
LEFT OUTER JOIN  
( 
SELECT COND_VTA, DESC_COND 
FROM <database>.dbo.GVA01  
GROUP BY COND_VTA, DESC_COND 
) SALESTERMS 
ON CUSTOMERS.COND_VTA = SALESTERMS.COND_VTA 
LEFT OUTER JOIN <database>.dbo.GVA62 GROUPS 
ON CUSTOMERS.GRUPO_EMPR = GROUPS.GRUPO_EMPR 
LEFT OUTER JOIN <database>.dbo.GVA10 SALESLIST 
ON CUSTOMERS.NRO_LISTA = SALESLIST.NRO_DE_LIS 
WHERE COD_TANGO = ''
AND ID_COMPANY = <company>




-- CstToTango
INSERT INTO <database>.[dbo].[GVA14] 
(ALI_ADI_IB, ALI_FIJ_IB, AL_FIJ_IB3, ALI_NO_CAT, C_POSTAL, CLAUSULA, COD_CLIENT, COD_PROVIN, COD_TRANSP, COD_VENDED, COD_ZONA, COND_VTA, CUIT, CUMPLEANIO, CUPO_CREDI, DIR_COM, DOMICILIO, E_MAIL, EXPORTA, FECHA_ALTA, GRUPO_EMPR, IB_L, IB_L3, II_D, II_IB3, II_L, IVA_D, IVA_L, LIB, LOCALIDAD, N_ING_BRUT, NOM_COM, NRO_LISTA, OBSERVACIO, PORC_DESC, PORC_EXCL, PORC_L, RAZON_SOCI, SOBRE_II, SOBRE_IVA, TELEFONO_1, TELEFONO_2, TIPO, TIPO_DOC, FECHA_MODI, MON_CTE, SUCUR_ORI)
SELECT 
ALI_ADI_IB, ALI_FIJ_IB, AL_FIJ_IB3, ALI_NO_CAT, C_POSTAL, CLAUSULA, '<newcode>', COD_PROVIN, COD_TRANSP, COD_VENDED, COD_ZONA, COND_VTA, CUIT, CUMPLEANIO, CUPO_CREDI, DIR_COM, DOMICILIO, E_MAIL, EXPORTA, CONVERT(DATETIME, {fn NOW()}, 102), GRUPO_EMPR, IB_L, IB_L3, II_D, II_IB3, II_L, IVA_D, IVA_L, LIB, LOCALIDAD, N_ING_BRUT, NOM_COM, NRO_LISTA, OBSERVACIO, PORC_DESC, PORC_EXCL, PORC_L, RAZON_SOCI, SOBRE_II, SOBRE_IVA, TELEFONO_1, TELEFONO_2, TIPO, TIPO_DOC, FECHA_MODI, MON_CTE, 0
FROM <ownerdatabase>.DBO.POTENTIALCUSTOMERS
WHERE ID_COMPANY = <company>
AND COD_CLIENT = '<customer>'


-- UpdatePCTgCst
UPDATE <ownerdatabase>.DBO.POTENTIALCUSTOMERS
SET COD_TANGO = '<newcode>',
FECHA_TANGO = CONVERT(DATETIME, {fn NOW()}, 102)
WHERE ID_COMPANY = <company>
AND COD_CLIENT = '<customer>'

-- UpdatePCAttachs
INSERT INTO <ownerdatabase>.DBO.ENTITIESATTACHMENTS
(COMPANY_ID, CUSTOMERCODE, ATTACHMENT_ID)
SELECT 
COMPANY_ID, CUSTOMERCODE, ATTACHMENT_ID
FROM <ownerdatabase>.DBO.ENTITIESATTACHMENTS
WHERE COMPANY_ID = <company>
AND CUSTOMERCODE = '<customer>'
AND TASKCODE = ''


-- UserAlerts
SELECT 
ALERTS.ALERT_ID AS ID,
ALERTS.COMPANY_ID AS COMPANY,
ALERTS.USER_ID AS IDUSER,
ALERTS.PROFILE_ID AS PROFILE,
ALERTS.SUBJECT AS SUBJECT,
ALERTS.DETAILS AS DETAIL,
ALERTS.ALERT_DATE AS INITDATE,
ALERTS.ALERT_EXECUTE AS EXECUTEDATE,
ALERTS.ALERT_ACTIVE AS ACTIVE
FROM <ownerdatabase>.DBO.ALERTS
WHERE (ALERTS.COMPANY_ID = <company>
AND   ALERTS.USER_ID = <user>
AND ALERTS.ALERT_ACTIVE = 1
AND ALERTS.ALERT_EXECUTE < = DATEADD(ms, 60000, CONVERT(DATETIME, {FN NOW()}, 102)))
OR
(ALERTS.COMPANY_ID = <company>
AND   ALERTS.PROFILE_ID = <profile>
AND ALERTS.ALERT_ACTIVE = 1
AND ALERTS.ALERT_EXECUTE < = DATEADD(ms, 60000, CONVERT(DATETIME, {FN NOW()}, 102)))

-- ALERTSBUUSER

SELECT 
ALERTS.ALERT_ID AS ID,
ALERTS.COMPANY_ID AS COMPANY,
ALERTS.USER_ID AS IDUSER,
ALERTS.PROFILE_ID AS PROFILE,
ALERTS.SUBJECT AS SUBJECT,
ALERTS.DETAILS AS DETAIL,
ALERTS.ALERT_DATE AS INITDATE,
ALERTS.ALERT_EXECUTE AS EXECUTEDATE,
ALERTS.ALERT_ACTIVE AS ACTIVE
FROM <ownerdatabase>.DBO.ALERTS
WHERE ALERTS.COMPANY_ID = <company>
AND   ALERTS.USER_ID = <user>


SELECT 
ALERTS.ALERT_ID AS ID,
ALERTS.COMPANY_ID AS COMPANY,
ALERTS.USER_ID AS IDUSER,
ALERTS.PROFILE_ID AS PROFILE,
ALERTS.SUBJECT AS SUBJECT,
ALERTS.DETAILS AS DETAIL,
ALERTS.ALERT_DATE AS INITDATE,
ALERTS.ALERT_EXECUTE AS EXECUTEDATE,
ALERTS.ALERT_ACTIVE AS ACTIVE
FROM <ownerdatabase>.DBO.ALERTS
WHERE ALERTS.ALERT_ID = <alert>


-- RESTOREALERT
UPDATE <ownerdatabase>.DBO.ALERTS 
SET ALERTS.ALERT_ACTIVE = 1 
WHERE ALERTS.ALERT_ID = <alert>


SELECT     
CUSTOMERS.ID_GVA14 AS ID
FROM <database>.dbo.GVA14 CUSTOMERS
WHERE CUSTOMERS.COD_CLIENT = '<code>'

SELECT 
CUSTOMERS.COD_CLIENT AS CODE 
FROM <database>.dbo.GVA14 CUSTOMERS 

SELECT 
CUSTOMERS.COD_CLIENT COLLATE Latin1_General_BIN AS CODE 
FROM <database>.dbo.GVA14 CUSTOMERS
WHERE CUSTOMERS.COD_CLIENT IN
(
SELECT CUSTOMERCODE COLLATE Latin1_General_BIN
FROM <ownerdatabase>.dbo.CUSTOMERDOMAIN
WHERE USER_ID = <user>
AND COMPANY_ID = <company>
)


SELECT
GROUPS.GRUPO_EMPR AS CODE,
GROUPS.NOMBRE_GRU AS NAME
FROM <database>.dbo.GVA62 GROUPS
WHERE GROUPS.GRUPO_EMPR = '<code>' 

SELECT 1 AS SORTORDER, 'CODIGO' AS NOMBRE, 'GRUPO_EMPR' AS FIELD, 100 AS WIDTH
UNION
SELECT 2 AS SORTORDER, 'GRUPO EMPRESARIO' AS NOMBRE, 'NOMBRE_GRU' AS FIELD, 500 AS WIDTH

SELECT
STATES.COD_PROVIN AS CODE,
STATES.NOMBRE_PRO AS NAME
FROM <database>.dbo.GVA18 STATES
WHERE STATES.COD_PROVIN = '<code>' 

SELECT 1 AS SORTORDER, 'CODIGO' AS NOMBRE, 'COD_PROVIN' AS FIELD, 100 AS WIDTH
UNION
SELECT 2 AS SORTORDER, 'NOMBRE' AS NOMBRE, 'NOMBRE_PRO' AS FIELD, 500 AS WIDTH

select *
FROM GVA05

SELECT
ZONES.COD_ZONA AS CODE,
ZONES.NOMBRE_ZON AS NAME
FROM <database>.dbo.GVA05 ZONES
WHERE ZONES.COD_ZONA = '<code>' 

SELECT 1 AS SORTORDER, 'CODIGO' AS NOMBRE, 'COD_ZONA' AS FIELD, 100 AS WIDTH
UNION
SELECT 2 AS SORTORDER, 'NOMBRE' AS NOMBRE, 'NOMBRE_ZON' AS FIELD, 500 AS WIDTH


SELECT
TRANSPORTS.COD_TRANSP AS CODE,
TRANSPORTS.NOMBRE_TRA AS NAME
FROM <database>.dbo.GVA24 TRANSPORTS
WHERE TRANSPORTS.COD_TRANSP = '<code>' 

SELECT 1 AS SORTORDER, 'CODIGO' AS NOMBRE, 'COD_TRANSP' AS FIELD, 100 AS WIDTH
UNION
SELECT 2 AS SORTORDER, 'TRANSPORTE' AS NOMBRE, 'NOMBRE_TRA' AS FIELD, 500 AS WIDTH

SELECT
TRANSPORTS.COD_TRANSP AS CODE,
TRANSPORTS.NOMBRE_TRA AS NAME
FROM <database>.dbo.GVA24 TRANSPORTS
WHERE <field> LIKE '<value>%' 


SELECT 0 AS CODE , CURRENCY.LEY_MON_EX AS NAME
FROM <database>.dbo.GVA16 CURRENCY
UNION ALL
SELECT 1 AS CODE , CURRENCY.LEY_MON_CT AS NAME
FROM <database>.dbo.GVA16 CURRENCY

SELECT 1 AS SORTORDER, 'CODIGO' AS NOMBRE, 'CODE' AS FIELD, 100 AS WIDTH
UNION
SELECT 2 AS SORTORDER, 'NOMBRE' AS NOMBRE, 'NAME' AS FIELD, 500 AS WIDTH

SELECT CODE, NAME
FROM
(
SELECT 0 AS CODE , CURRENCY.LEY_MON_EX AS NAME
FROM <database>.dbo.GVA16 CURRENCY
UNION ALL
SELECT 1 AS CODE , CURRENCY.LEY_MON_CT AS NAME
FROM <database>.dbo.GVA16 CURRENCY
) CURRENCIES
WHERE CODE = '<code>'


SELECT CODE, NAME
FROM
(
SELECT 0 AS CODE , CURRENCY.LEY_MON_EX AS NAME
FROM <database>.dbo.GVA16 CURRENCY
UNION ALL
SELECT 1 AS CODE , CURRENCY.LEY_MON_CT AS NAME
FROM <database>.dbo.GVA16 CURRENCY
) CURRENCIES

SELECT 
SALESTERMS.ID_GVA01 AS ID, 
SALESTERMS.COND_VTA AS CODE, 
SALESTERMS.DESC_COND AS NAME 
FROM <database>.dbo.GVA01 SALESTERMS 
WHERE SALESTERMS.COND_VTA = '<code>' 

SELECT 
SALESTERMS.COND_VTA AS CODE, 
SALESTERMS.DESC_COND AS NAME 
FROM <database>.dbo.GVA01 SALESTERMS 

SELECT 1 AS SORTORDER, 'CODIGO' AS NOMBRE, 'COND_VTA' AS FIELD, 100 AS WIDTH
UNION
SELECT 2 AS SORTORDER, 'CONDICION DE VENTA' AS NOMBRE, 'DESC_COND' AS FIELD, 500 AS WIDTH

SELECT 
EMPLOYEES.ID_GVA23 AS ID,
EMPLOYEES.COD_VENDED AS CODE,
EMPLOYEES.NOMBRE_VEN AS NAME,
EMPLOYEES.PORC_COMIS AS PROFIT
FROM <database>.dbo.GVA23 EMPLOYEES
WHERE EMPLOYEES.COD_VENDED = '<code>' 

SELECT 
EMPLOYEES.COD_VENDED AS CODE,
EMPLOYEES.NOMBRE_VEN AS NAME,
EMPLOYEES.PORC_COMIS AS PROFIT
FROM <database>.dbo.GVA23 EMPLOYEES


SELECT 1 AS SORTORDER, 'CODIGO' AS NOMBRE, 'COD_VENDED' AS FIELD, 100 AS WIDTH
UNION 
SELECT 2 AS SORTORDER, 'NOMBRE' AS NOMBRE, 'NOMBRE_VEN' AS FIELD, 500 AS WIDTH
UNION
SELECT 3 AS SORTORDER, 'COMISION' AS NOMBRE, 'PORC_COMIS' AS FIELD, 100 AS WIDTH


EXEC <systemdatabase>.dbo.RowsToString 
' SELECT TEXTO 
  FROM <database>.dbo.GVA111
  WHERE COD_CLIENT = ''<code>''
  ORDER BY NRO_RENGL '


SELECT 
SYSTEMENTITY_ID AS ID,
SYSTEMENTITY_NAME AS NAME,
SYSTEMENTITY_CLASSNAME AS CLASSNAME,
SYSTEMENTITY_USERNAME AS USERNAME
FROM <ownerdatabase>.DBO.SYSTEMENTITIES

SELECT 
TASK_ID AS ID,
TASK_TYPE AS INTERNAL TYPE,
TASK_ID_TASKTYPE AS TASKTYPE,
TASK_ID_USERINIT AS CREATOR,
TASK_ID_USERPERFIL AS RESPONSIBLEPROFILE,
TASK_ID_USEROWNER AS  RESPONSIBLEUSER,
TASK_DETAIL AS DETAIL
FROM <ownerdatabase>.dbo.TASK
WHERE TASK_ID = <code>

SELECT 
TASK_ID AS ID
FROM <ownerdatabase>.dbo.TASK


SELECT 
PROPERTY_ID AS ID,
PROPERTY_CODE AS CODE,
PROPERTY_OBJECT AS SYSOBJECT,
PROPERTY_NAME AS NAME,
PROPERTY_FIELD AS FIELD,
PROPERTY_DISPLAYNAME AS DISPLAYNAME,
PROPERTY_LEN AS LEN
FROM <ownerdatabase>.DBO.SYSTEMPROPERTIES


SELECT 
ACTION_ID AS ID,
ACTION_IDOWNER AS IDOWNER,
ACTION_ID_DB AS IDDATABASE,
ACTION_ID_OBJECTTYPE AS OBJECTTYPE,
ACTION_ORIGINALOBJECT AS ORIGINALOBJECT,
ACTION_FINALOBJECT AS FINALOBJECT,
ACTION_SQLSTRING AS SQLSTRING,
ACTION_IDTYPE AS TYPE,
ACTION_USER AS IDUSER,
ACTION_USER_ADMIN AS IDADMIN,
ACTION_DATE_INIT AS INITDATE,
ACTION_DATE_PROCESS AS PROCESSDATE,
ACTION_ID_ACTIONSTATE AS STATUS
FROM <ownerdatabase>.dbo.ACTIONS
WHERE ACTION_ID = <code>


SELECT DATA
FROM <ownerdatabase>.dbo.LICENCE

-- Connections
SELECT COUNT(*)
FROM sys.sysprocesses
WHERE PROGRAM_NAME = 'CRM 2x4'
GROUP BY NET_ADDRESS


SELECT 
COMPANIES.ID_COMPANY AS ID,
TGCOMPANIES.IDEMPRESA AS TANGOID,
TGCOMPANIES.NOMBREEMPRESA AS NAME,
TGCOMPANIES.NOMBREBD AS DBNAME,
TGCOMPANIES.TIPOBD AS DBTYPE
FROM <dictionarydatabase>.DBO.EMPRESA TGCOMPANIES
INNER JOIN <dictionarydatabase>.DBO.PERMISO TGPERMISSIONS
ON TGCOMPANIES.IDEMPRESA = TGPERMISSIONS.IDEMPRESA
INNER JOIN <dictionarydatabase>.DBO.ROL TGROLES
ON TGPERMISSIONS.IDROL = TGROLES.IDROL
INNER JOIN <dictionarydatabase>.DBO.USUARIO TGUSERS
ON TGPERMISSIONS.IDUSUARIO = TGUSERS.IDUSUARIO
INNER JOIN <ownerdatabase>.DBO.COMPANIES 
ON TGCOMPANIES.IDEMPRESA = COMPANIES.TANGO_ID
INNER JOIN <ownerdatabase>.DBO.USERPROFILE 
ON COMPANIES.ID_COMPANY = USERPROFILE.COMPANY_ID
INNER JOIN <ownerdatabase>.DBO.PROFILES
ON USERPROFILE.PRF_ID = PROFILES.PRF_ID
INNER JOIN <ownerdatabase>.DBO.USERS
ON USERS.USER_ID = USERPROFILE.USER_ID
WHERE USERS.USER_ID = <user>


SELECT 
COMPANIES.ID_COMPANY AS ID,
TGCOMPANIES.IDEMPRESA AS TANGOID,
TGCOMPANIES.NOMBREEMPRESA AS NAME,
TGCOMPANIES.NOMBREBD AS DBNAME,
TGCOMPANIES.TIPOBD AS DBTYPE
FROM <dictionarydatabase>.DBO.EMPRESA TGCOMPANIES
INNER JOIN <ownerdatabase>.DBO.COMPANIES 
ON TGCOMPANIES.IDEMPRESA = COMPANIES.TANGO_ID


SELECT 
USERS.USER_ID AS ID,
USERS.TANGO_ID AS TANGOID,
USERS.USER_LOGIN AS NICKNAME,
USERS.USER_NAME AS FIRSTNAME,
USERS.USER_SURNAME AS LASTNAME,
USERS.USER_EMAIL AS MAIL
FROM <ownerdatabase>.DBO.USERS
INNER JOIN <dictionarydatabase>.DBO.USUARIO TGUSERS
ON USERS.TANGO_ID = TGUSERS.IDUSUARIO
INNER JOIN <ownerdatabase>.DBO.USERPROFILE
ON USERS.USER_ID = USERPROFILE.USER_ID
INNER JOIN <ownerdatabase>.DBO.PROFILES
ON USERPROFILE.PRF_ID = PROFILES.PRF_ID
WHERE USERS.USER_LOGIN = '<user>'




SELECT 
COMPANIES.ID_COMPANY AS ID,
TGCOMPANIES.IDEMPRESA AS TANGOID,
TGCOMPANIES.NOMBREEMPRESA AS NAME,
TGCOMPANIES.NOMBREBD AS DBNAME,
TGCOMPANIES.TIPOBD AS DBTYPE
FROM <dictionarydatabase>.DBO.EMPRESA TGCOMPANIES
INNER JOIN <ownerdatabase>.DBO.COMPANIES 
ON TGCOMPANIES.IDEMPRESA = COMPANIES.TANGO_ID
WHERE COMPANIES.ID_COMPANY = <Id>



SELECT 
ATTACHMENT_ID AS ID,
ATTACHMENT_TITLE AS NAME,
ATTACHMENT_EXTENSION AS EXTENSION
FROM <ownerdatabase>.DBO.ATTACHMENTS
INNER JOIN <ownerdatabase>.DBO.ENTITIESATTACHMENTS
ON ENTITIESATTACHMENTS.ATTACHMENT_ID = ATTACHMENTS.ID_ATTACHMENT
WHERE COMPANY_ID = <company>
AND   CUSTOMERCODE = '<customer>'

SELECT 
ATTACHMENT_TITLE AS NAME,
ATTACHMENT_BODY AS DATA,
ATTACHMENT_EXTENSION AS EXTENSION
FROM <ownerdatabase>.DBO.ATTACHMENTS
WHERE ID_ATTACHMENT = <id>


SELECT 
PARAMETER_NAME AS PARAMETERNAME,
PARAMETER_TYPE AS PARAMETERTYPE,
PARAMETER_VALUE AS PARAMETERVALUE
FROM <ownerdatabase>.DBO.ACTIONPARAMETERS
WHERE ACTION_ID = <action>


SELECT *
FROM GVA41

SELECT 
TAXES.COD_ALICUO AS CODE,
TAXES.DESCRIPCIO AS NAME,
TAXES.IMPORTE AS AMOUNT,
TAXES.PORCENTAJE AS PERC
FROM <database>.dbo.GVA41 TAXES
WHERE TAXES.COD_ALICUO = '<code>' 

SELECT 
TAXES.COD_ALICUO AS CODE,
TAXES.DESCRIPCIO AS NAME,
TAXES.IMPORTE AS AMOUNT,
TAXES.PORCENTAJE AS PERC
FROM <database>.dbo.GVA41 TAXES

SELECT 1 AS SORTORDER, 'CODIGO' AS NOMBRE, 'COD_ALICUO' AS FIELD, 100 AS WIDTH
UNION
SELECT 2 AS SORTORDER, 'NOMBRE' AS NOMBRE, 'DESCRIPCIO' AS FIELD, 500 AS WIDTH
UNION
SELECT 3 AS SORTORDER, 'IMPORTE' AS NOMBRE, 'IMPORTE' AS FIELD, 100 AS WIDTH
UNION
SELECT 4 AS SORTORDER, 'PORCENTAJE' AS NOMBRE, 'PORCENTAJE' AS FIELD, 100 AS WIDTH



-- CUSTOMERS

USE SOC_DE_SAN_PABLO_2008



SELECT 
CUSTOMERS.COD_CLIENT AS CODE,
CUSTOMERS.NOM_COM AS NAME,
CUSTOMERS.RAZON_SOCI AS LEGALNAME,
CUSTOMERS.CUIT AS CUIT,
CUSTOMERS.DIR_COM AS ADRESS,
CUSTOMERS.DOMICILIO AS DELIVERYADRESS,
CUSTOMERS.C_POSTAL AS ZIPCODE,
CUSTOMERS.LOCALIDAD AS CITY,
STATES.NOMBRE_PRO AS STATENAME,
TRANSPORTS.NOMBRE_TRA AS TRANSPORTNAME,
EMPLOYEES.NOMBRE_VEN AS EMPLOYEENAME,
ZONES.NOMBRE_ZON AS ZONENAME,
SALESTERMS.DESC_COND AS SALESTERMNAME,
GROUPS.NOMBRE_GRU AS GROUPNAME,
SALESLIST.NOMBRE_LIS AS SALESLISTNAME,
CUSTOMERS.PORC_DESC AS DISCOUNTPERCENT 
FROM <database>.dbo.GVA14 CUSTOMERS
LEFT OUTER JOIN <database>.dbo.GVA18 STATES ON CUSTOMERS.COD_PROVIN = STATES.COD_PROVIN
LEFT OUTER JOIN <database>.dbo.GVA24 TRANSPORTS ON CUSTOMERS.COD_TRANSP = TRANSPORTS.COD_TRANSP
LEFT OUTER JOIN <database>.dbo.GVA23 EMPLOYEES ON CUSTOMERS.COD_VENDED = EMPLOYEES.COD_VENDED
LEFT OUTER JOIN <database>.dbo.GVA05 ZONES ON CUSTOMERS.COD_ZONA = ZONES.COD_ZONA
LEFT OUTER JOIN 
(
SELECT COND_VTA, DESC_COND
FROM <database>.dbo.GVA01 
GROUP BY COND_VTA, DESC_COND
) SALESTERMS 
ON CUSTOMERS.COND_VTA = SALESTERMS.COND_VTA
LEFT OUTER JOIN <database>.dbo.GVA62 GROUPS ON CUSTOMERS.GRUPO_EMPR = GROUPS.GRUPO_EMPR
LEFT OUTER JOIN <database>.dbo.GVA10 SALESLIST ON CUSTOMERS.NRO_LISTA = SALESLIST.NRO_DE_LIS
WHERE CUSTOMERS.COD_CLIENT IN
(
SELECT CUSTOMERCODE COLLATE Latin1_General_BIN
FROM <ownerdatabase>.DBO.CUSTOMERDOMAIN
WHERE USER_ID = <user>
AND COMPANY_ID = <company>
)



CUSTOMERS.COD_CLIENT AS CODE,
CUSTOMERS.NOM_COM AS NAME,
CUSTOMERS.RAZON_SOCI AS LEGALNAME,
CUSTOMERS.CUIT AS CUIT,
CUSTOMERS.DIR_COM AS ADRESS,
CUSTOMERS.DOMICILIO AS DELIVERYADRESS,
CUSTOMERS.C_POSTAL AS ZIPCODE,
CUSTOMERS.LOCALIDAD AS CITY,
STATES.NOMBRE_PRO AS STATENAME,
TRANSPORTS.NOMBRE_TRA AS TRANSPORTNAME,
EMPLOYEES.NOMBRE_VEN AS EMPLOYEENAME,
ZONES.NOMBRE_ZON AS ZONENAME,
SALESTERMS.DESC_COND AS SALESTERMNAME,
GROUPS.NOMBRE_GRU AS GROUPNAME,
SALESLIST.NOMBRE_LIS AS SALESLISTNAME,
CUSTOMERS.PORC_DESC AS DISCOUNTPERCENT 
FROM <database>.dbo.GVA14 CUSTOMERS
LEFT OUTER JOIN <database>.dbo.GVA18 STATES ON CUSTOMERS.COD_PROVIN = STATES.COD_PROVIN
LEFT OUTER JOIN <database>.dbo.GVA24 TRANSPORTS ON CUSTOMERS.COD_TRANSP = TRANSPORTS.COD_TRANSP
LEFT OUTER JOIN <database>.dbo.GVA23 EMPLOYEES ON CUSTOMERS.COD_VENDED = EMPLOYEES.COD_VENDED
LEFT OUTER JOIN <database>.dbo.GVA05 ZONES ON CUSTOMERS.COD_ZONA = ZONES.COD_ZONA
LEFT OUTER JOIN 
(
SELECT COND_VTA, DESC_COND
FROM <database>.dbo.GVA01 
GROUP BY COND_VTA, DESC_COND
) SALESTERMS 
ON CUSTOMERS.COND_VTA = SALESTERMS.COND_VTA
LEFT OUTER JOIN <database>.dbo.GVA62 GROUPS ON CUSTOMERS.GRUPO_EMPR = GROUPS.GRUPO_EMPR
LEFT OUTER JOIN <database>.dbo.GVA10 SALESLIST ON CUSTOMERS.NRO_LISTA = SALESLIST.NRO_DE_LIS
LEFT OUTER JOIN 
(
SELECT CUSTOMERCODE
FROM <ownerdatabase>.DBO.CUSTOMERDOMAIN 
WHERE USER_ID = <user>
AND COMPANY_ID = <company>
) USERCUSTOMERS
ON CUSTOMERS.COD_CLIENT = USERCUSTOMERS.CUSTOMERCODE COLLATE Latin1_General_BIN


SELECT 1 AS SORTORDER, 'CODIGO' AS NOMBRE, 'COD_CLIENT' AS FIELD, 100 AS WIDTH
UNION
SELECT 2 AS SORTORDER, 'NOMBRE' AS NOMBRE, 'NOM_COM' AS FIELD, 300 AS WIDTH
UNION
SELECT 3 AS SORTORDER, 'RAZON SOCIAL' AS NOMBRE, 'RAZON_SOCI' AS FIELD, 300 AS WIDTH
UNION
SELECT 4 AS SORTORDER, 'CUIT' AS NOMBRE, 'CUIT' AS FIELD, 100 AS WIDTH
UNION
SELECT 5 AS SORTORDER, 'DIRECCION COMERCIAL' AS NOMBRE, 'DIR_COM' AS FIELD, 100 AS WIDTH
UNION
SELECT 6 AS SORTORDER, 'DIRECCION DE ENTREGA' AS NOMBRE, 'CUSTOMERS.DOMICILIO' AS FIELD, 100 AS WIDTH
UNION
SELECT 7 AS SORTORDER, 'COD. POSTAL' AS NOMBRE, 'CUSTOMERS.C_POSTAL' AS FIELD, 100 AS WIDTH
UNION
SELECT 8 AS SORTORDER, 'LOCALIDAD' AS NOMBRE, 'CUSTOMERS.LOCALIDAD' AS FIELD, 100 AS WIDTH
UNION
SELECT 9 AS SORTORDER, 'PROVINCIA' AS NOMBRE, 'NOMBRE_PRO' AS FIELD, 100 AS WIDTH
UNION
SELECT 10 AS SORTORDER, 'TRANSPORTE' AS NOMBRE, 'NOMBRE_TRA' AS FIELD, 100 AS WIDTH
UNION
SELECT 11 AS SORTORDER, 'VENDEDOR' AS NOMBRE, 'NOMBRE_VEN' AS FIELD, 100 AS WIDTH
UNION
SELECT 12 AS SORTORDER, 'ZONA' AS NOMBRE, 'NOMBRE_ZON' AS FIELD, 100 AS WIDTH
UNION
SELECT 13 AS SORTORDER, 'COND. DE VENTA' AS NOMBRE, 'DESC_COND' AS FIELD, 100 AS WIDTH
UNION
SELECT 14 AS SORTORDER, 'GRUPO' AS NOMBRE, 'NOMBRE_GRU' AS FIELD, 100 AS WIDTH
UNION
SELECT 15 AS SORTORDER, 'LISTA DE PRECIOS' AS NOMBRE, 'NOMBRE_LIS' AS FIELD, 100 AS WIDTH
UNION
SELECT 16 AS SORTORDER, 'DESCUENTO' AS NOMBRE, 'PORC_DESC' AS FIELD, 100 AS WIDTH



SELECT 
USERS.USER_ID AS ID,
USERS.TANGO_ID AS TANGOID,
USERS.USER_LOGIN AS NICKNAME,
TGUSERS.NOMBRECOMPLETO AS FULLNAME,
TGUSERS.EMAIL AS MAIL,
PROFILES.PRF_ID AS IDPROFILE,
PROFILES.PRF_PROFILE AS PRFNAME
FROM <ownerdatabase>.DBO.USERS
INNER JOIN <dictionarydatabase>.DBO.USUARIO TGUSERS
ON USERS.TANGO_ID = TGUSERS.IDUSUARIO
INNER JOIN <ownerdatabase>.DBO.USERPROFILE
ON USERS.USER_ID = USERPROFILE.USER_ID
INNER JOIN <ownerdatabase>.DBO.PROFILES
ON USERPROFILE.PRF_ID = PROFILES.PRF_ID
INNER JOIN <ownerdatabase>.DBO.COMPANIES
ON USERPROFILE.COMPANY_ID = COMPANIES.ID_COMPANY
WHERE COMPANIES.ID_COMPANY = <company>

SELECT 
USERS.USER_ID AS ID,
TGUSERS.IDUSUARIO AS TANGOID, 
TGUSERS.NOMBREUSUARIO AS NICKNAME,
TGUSERS.NOMBRECOMPLETO AS FULLNAME,
TGUSERS.EMAIL AS MAIL
FROM <dictionarydatabase>.DBO.USUARIO TGUSERS
LEFT OUTER JOIN <ownerdatabase>.DBO.USERS
ON TGUSERS.IDUSUARIO = USERS.TANGO_ID


SELECT 
PROFILES.PRF_ID AS IDPROFILE,
PROFILES.PRF_PROFILE AS PRFNAME
FROM <ownerdatabase>.DBO.PROFILES
WHERE PROFILES.PRF_ID = <profile>


IF NOT EXISTS
(
SELECT *
FROM <ownerdatabase>.DBO.USERS
WHERE TANGO_ID = <user>
)
INSERT INTO <ownerdatabase>.DBO.USERS 
(TANGO_ID, USER_LOGIN, USER_HIERARCHY, USER_ACTIVE, USER_CONNECTED)
SELECT USUARIO.IDUSUARIO, USUARIO.NOMBREUSUARIO, 0, 1, 0
FROM <dictionarydatabase>.DBO.USUARIO
WHERE USUARIO.IDUSUARIO = <user>



-- USER BY NICKNAME
SELECT 
USERS.USER_ID AS ID,
USERS.TANGO_ID AS TANGOID,
TGUSERS.NOMBREUSUARIO AS NICKNAME,
TGUSERS.NOMBRECOMPLETO AS FULLNAME,
TGUSERS.EMAIL AS MAIL
FROM <ownerdatabase>.DBO.USERS
INNER JOIN <dictionarydatabase>.DBO.USUARIO TGUSERS
ON USERS.TANGO_ID = TGUSERS.IDUSUARIO
INNER JOIN <ownerdatabase>.DBO.USERPROFILE
ON USERS.USER_ID = USERPROFILE.USER_ID
INNER JOIN <ownerdatabase>.DBO.PROFILES
ON USERPROFILE.PRF_ID = PROFILES.PRF_ID
WHERE USERS.USER_LOGIN = '<user>'



-- USER BY ID
SELECT 
USERS.USER_ID AS ID,
USERS.TANGO_ID AS TANGOID,
TGUSERS.NOMBREUSUARIO AS NICKNAME,
TGUSERS.NOMBRECOMPLETO AS FULLNAME,
TGUSERS.EMAIL AS MAIL
FROM <ownerdatabase>.DBO.USERS
INNER JOIN <dictionarydatabase>.DBO.USUARIO TGUSERS
ON USERS.TANGO_ID = TGUSERS.IDUSUARIO
WHERE USERS.USER_ID = <user>

-- USER BY TANGOID
SELECT 
USERS.USER_ID AS ID,
USERS.TANGO_ID AS TANGOID,
TGUSERS.NOMBREUSUARIO AS NICKNAME,
TGUSERS.NOMBRECOMPLETO AS FULLNAME,
TGUSERS.EMAIL AS MAIL
FROM <ownerdatabase>.DBO.USERS
INNER JOIN <dictionarydatabase>.DBO.USUARIO TGUSERS
ON USERS.TANGO_ID = TGUSERS.IDUSUARIO
WHERE USERS.TANGO_ID = <user>


IF NOT EXISTS
(
SELECT *
FROM <ownerdatabase>.DBO.USERPROFILE
WHERE USER_ID = <user>
AND COMPANY_ID = <company>
)
INSERT INTO <ownerdatabase>.DBO.USERPROFILE
(PRF_ID, USER_ID, COMPANY_ID, USERPRF_DATE, USERPRF_ACTIVE) 
VALUES
(<profile>, <user>, <company>, CONVERT(DATETIME, GETDATE(), 102), 1)
ELSE
UPDATE <ownerdatabase>.DBO.USERPROFILE
SET PRF_ID =  <profile>,
USERPRF_ACTIVE = 1
WHERE USER_ID = <user>
AND COMPANY_ID = <company>


UPDATE <ownerdatabase>.DBO.USERPROFILE
SET USERPRF_ACTIVE = 0




SELECT 
(CASE WHEN USERCUSTOMERS.CUSTOMERCODE IS NULL THEN 0 ELSE 1 END) AS SELECTED,
CUSTOMERS.COD_CLIENT AS CODE,
CUSTOMERS.NOM_COM AS NAME,
CUSTOMERS.RAZON_SOCI AS LEGALNAME,
CUSTOMERS.CUIT AS CUIT,
CUSTOMERS.DIR_COM AS ADRESS,
CUSTOMERS.DOMICILIO AS DELIVERYADRESS,
CUSTOMERS.C_POSTAL AS ZIPCODE,
CUSTOMERS.LOCALIDAD AS CITY,
STATES.NOMBRE_PRO AS STATENAME,
TRANSPORTS.NOMBRE_TRA AS TRANSPORTNAME,
EMPLOYEES.NOMBRE_VEN AS EMPLOYEENAME,
ZONES.NOMBRE_ZON AS ZONENAME,
SALESTERMS.DESC_COND AS SALESTERMNAME,
GROUPS.NOMBRE_GRU AS GROUPNAME,
SALESLIST.NOMBRE_LIS AS SALESLISTNAME,
CUSTOMERS.PORC_DESC AS DISCOUNTPERCENT 
FROM <database>.dbo.GVA14 CUSTOMERS
LEFT OUTER JOIN <database>.dbo.GVA18 STATES ON CUSTOMERS.COD_PROVIN = STATES.COD_PROVIN
LEFT OUTER JOIN <database>.dbo.GVA24 TRANSPORTS ON CUSTOMERS.COD_TRANSP = TRANSPORTS.COD_TRANSP
LEFT OUTER JOIN <database>.dbo.GVA23 EMPLOYEES ON CUSTOMERS.COD_VENDED = EMPLOYEES.COD_VENDED
LEFT OUTER JOIN <database>.dbo.GVA05 ZONES ON CUSTOMERS.COD_ZONA = ZONES.COD_ZONA
LEFT OUTER JOIN 
(
SELECT COND_VTA, DESC_COND
FROM <database>.dbo.GVA01 
GROUP BY COND_VTA, DESC_COND
) SALESTERMS 
ON CUSTOMERS.COND_VTA = SALESTERMS.COND_VTA
LEFT OUTER JOIN <database>.dbo.GVA62 GROUPS ON CUSTOMERS.GRUPO_EMPR = GROUPS.GRUPO_EMPR
LEFT OUTER JOIN <database>.dbo.GVA10 SALESLIST ON CUSTOMERS.NRO_LISTA = SALESLIST.NRO_DE_LIS
LEFT OUTER JOIN 
(
SELECT CUSTOMERCODE
FROM <ownerdatabase>.DBO.CUSTOMERDOMAIN 
WHERE USER_ID = <user>
AND COMPANY_ID = <company>
) USERCUSTOMERS
ON CUSTOMERS.COD_CLIENT = USERCUSTOMERS.CUSTOMERCODE COLLATE Latin1_General_BIN


SELECT 1 AS SORTORDER, 'CODIGO' AS NOMBRE, 'COD_CLIENT' AS FIELD, 100 AS WIDTH
UNION
SELECT 2 AS SORTORDER, 'NOMBRE' AS NOMBRE, 'NOM_COM' AS FIELD, 300 AS WIDTH
UNION
SELECT 3 AS SORTORDER, 'RAZON SOCIAL' AS NOMBRE, 'RAZON_SOCI' AS FIELD, 300 AS WIDTH
UNION
SELECT 4 AS SORTORDER, 'CUIT' AS NOMBRE, 'CUIT' AS FIELD, 100 AS WIDTH
UNION
SELECT 5 AS SORTORDER, 'DIRECCION COMERCIAL' AS NOMBRE, 'DIR_COM' AS FIELD, 100 AS WIDTH
UNION
SELECT 6 AS SORTORDER, 'DIRECCION DE ENTREGA' AS NOMBRE, 'DOMICILIO' AS FIELD, 100 AS WIDTH
UNION
SELECT 7 AS SORTORDER, 'COD. POSTAL' AS NOMBRE, 'C_POSTAL' AS FIELD, 100 AS WIDTH
UNION
SELECT 8 AS SORTORDER, 'LOCALIDAD' AS NOMBRE, 'CUSTOMERS.LOCALIDAD' AS FIELD, 100 AS WIDTH
UNION
SELECT 9 AS SORTORDER, 'PROVINCIA' AS NOMBRE, 'NOMBRE_PRO' AS FIELD, 100 AS WIDTH
UNION
SELECT 10 AS SORTORDER, 'TRANSPORTE' AS NOMBRE, 'NOMBRE_TRA' AS FIELD, 100 AS WIDTH
UNION
SELECT 11 AS SORTORDER, 'VENDEDOR' AS NOMBRE, 'NOMBRE_VEN' AS FIELD, 100 AS WIDTH
UNION
SELECT 12 AS SORTORDER, 'ZONA' AS NOMBRE, 'NOMBRE_ZON' AS FIELD, 100 AS WIDTH
UNION
SELECT 13 AS SORTORDER, 'COND. DE VENTA' AS NOMBRE, 'DESC_COND' AS FIELD, 100 AS WIDTH
UNION
SELECT 14 AS SORTORDER, 'GRUPO' AS NOMBRE, 'NOMBRE_GRU' AS FIELD, 100 AS WIDTH
UNION
SELECT 15 AS SORTORDER, 'LISTA DE PRECIOS' AS NOMBRE, 'NOMBRE_LIS' AS FIELD, 100 AS WIDTH
UNION
SELECT 16 AS SORTORDER, 'DESCUENTO' AS NOMBRE, 'PORC_DESC' AS FIELD, 100 AS WIDTH


IF NOT EXISTS
(
SELECT *
FROM <ownerdatabase>.DBO.COMPANIES
WHERE TANGO_ID = <company>
)
INSERT INTO <ownerdatabase>.DBO.COMPANIES
(DBNAME, TANGO_ID)
VALUES
('<database>', <company>)

DELETE FROM <ownerdatabase>.DBO.CUSTOMERDOMAIN 
WHERE USER_ID = <user>
AND COMPANY_ID = <company>
AND CUSTOMERCODE = '<customer>'



SELECT 
PROFILES.PRF_ID AS IDPROFILE
FROM <ownerdatabase>.DBO.PROFILES
WHERE PROFILES.PRF_PROFILE = '<profile>'


SELECT 
PRF_ID AS IDPROFILE,
PRF_PROFILE AS PRFNAME,
PRF_DESCRIPTION AS DESCRIPTION,
PRF_CUSTOMERREALVIEWGENERAL AS CUSTOMERREALVIEWGENERAL,
PRF_CUSTOMERREALVIEWADRESS AS CUSTOMERREALVIEWADRESS,
PRF_CUSTOMERREALVIEWDELIVERY AS CUSTOMERREALVIEWDELIVERY,
PRF_CUSTOMERREALVIEWTERMS AS CUSTOMERREALVIEWTERMS,
PRF_CUSTOMERREALVIEWCONTACTS AS CUSTOMERREALVIEWCONTACTS,
PRF_CUSTOMERREALVIEWATTACHMENTS AS CUSTOMERREALVIEWATTACHMENTS,
PRF_CUSTOMERREALVIEWNOTES AS CUSTOMERREALVIEWNOTES,
PRF_CUSTOMERREALADD AS CUSTOMERREALADD,
PRF_CUSTOMERREALEDIT AS CUSTOMERREALEDIT,
PRF_CUSTOMERPOTENTIALVIEWGENERAL AS CUSTOMERPOTENTIALVIEWGENERAL,
PRF_CUSTOMERPOTENTIALVIEWADRESS AS CUSTOMERPOTENTIALVIEWADRESS,
PRF_CUSTOMERPOTENTIALVIEWDELIVERY AS CUSTOMERPOTENTIALVIEWDELIVERY,
PRF_CUSTOMERPOTENTIALVIEWTERMS AS CUSTOMERPOTENTIALVIEWTERMS,
PRF_CUSTOMERPOTENTIALVIEWCONTACTS AS CUSTOMERPOTENTIALVIEWCONTACTS,
PRF_CUSTOMERPOTENTIALVIEWATTACHMENTS AS CUSTOMERPOTENTIALVIEWATTACHMENTS,
PRF_CUSTOMERPOTENTIALVIEWNOTES AS CUSTOMERPOTENTIALVIEWNOTES,
PRF_CUSTOMERPOTENTIALADD AS CUSTOMERPOTENTIALADD,
PRF_CUSTOMERPOTENTIALEDIT AS CUSTOMERPOTENTIALEDIT,
PRF_TASKS AS TASKS
FROM <ownerdatabase>.DBO.PROFILES
WHERE PRF_ID = <profile>



SELECT 
PROFILES.PRF_ID AS IDPROFILE,
PROFILES.PRF_PROFILE AS PRFNAME,
PROFILES.PRF_DESCRIPTION AS DESCRIPTION,
PROFILES.PRF_CUSTOMERREALVIEWGENERAL AS CUSTOMERREALVIEWGENERAL,
PROFILES.PRF_CUSTOMERREALVIEWADRESS AS CUSTOMERREALVIEWADRESS,
PROFILES.PRF_CUSTOMERREALVIEWDELIVERY AS CUSTOMERREALVIEWDELIVERY,
PROFILES.PRF_CUSTOMERREALVIEWTERMS AS CUSTOMERREALVIEWTERMS,
PROFILES.PRF_CUSTOMERREALVIEWCONTACTS AS CUSTOMERREALVIEWCONTACTS,
PROFILES.PRF_CUSTOMERREALVIEWATTACHMENTS AS CUSTOMERREALVIEWATTACHMENTS,
PROFILES.PRF_CUSTOMERREALVIEWNOTES AS CUSTOMERREALVIEWNOTES,
PROFILES.PRF_CUSTOMERREALADD AS CUSTOMERREALADD,
PROFILES.PRF_CUSTOMERREALEDIT AS CUSTOMERREALEDIT,
PROFILES.PRF_CUSTOMERPOTENTIALVIEWGENERAL AS CUSTOMERPOTENTIALVIEWGENERAL,
PROFILES.PRF_CUSTOMERPOTENTIALVIEWADRESS AS CUSTOMERPOTENTIALVIEWADRESS,
PROFILES.PRF_CUSTOMERPOTENTIALVIEWDELIVERY AS CUSTOMERPOTENTIALVIEWDELIVERY,
PROFILES.PRF_CUSTOMERPOTENTIALVIEWTERMS AS CUSTOMERPOTENTIALVIEWTERMS,
PROFILES.PRF_CUSTOMERPOTENTIALVIEWCONTACTS AS CUSTOMERPOTENTIALVIEWCONTACTS,
PROFILES.PRF_CUSTOMERPOTENTIALVIEWATTACHMENTS AS CUSTOMERPOTENTIALVIEWATTACHMENTS,
PROFILES.PRF_CUSTOMERPOTENTIALVIEWNOTES AS CUSTOMERPOTENTIALVIEWNOTES,
PROFILES.PRF_CUSTOMERPOTENTIALADD AS CUSTOMERPOTENTIALADD,
PROFILES.PRF_CUSTOMERPOTENTIALEDIT AS CUSTOMERPOTENTIALEDIT,
PROFILES.PRF_TASKS AS TASKS
FROM <ownerdatabase>.DBO.PROFILES
INNER JOIN <ownerdatabase>.DBO.USERPROFILE 
ON PROFILES.PRF_ID = USERPROFILE.PRF_ID 
WHERE USER_ID = <user> 
AND   COMPANY_ID = <company>



SELECT  
COMPANIES.ID_COMPANY AS ID, 
TGCOMPANIES.IDEMPRESA AS TANGOID, 
TGCOMPANIES.NOMBREEMPRESA AS NAME, 
TGCOMPANIES.NOMBREBD AS DBNAME, 
TGCOMPANIES.TIPOBD AS DBTYPE 
FROM <dictionarydatabase>.DBO.EMPRESA TGCOMPANIES 
LEFT OUTER JOIN <ownerdatabase>.DBO.COMPANIES 
ON TGCOMPANIES.IDEMPRESA = COMPANIES.TANGO_ID
ORDER BY TGCOMPANIES.NOMBREEMPRESA

SELECT 
PROFILES.PRF_ID AS IDPROFILE,
PROFILES.PRF_PROFILE AS PRFNAME,
PROFILES.PRF_DESCRIPTION AS DESCRIPTION,
PROFILES.PRF_CUSTOMERVIEWGENERAL AS CUSTOMERVIEWGENERAL,
PROFILES.PRF_CUSTOMERVIEWADRESS AS CUSTOMERVIEWADRESS,
PROFILES.PRF_CUSTOMERVIEWDELIVERY AS CUSTOMERVIEWDELIVERY,
PROFILES.PRF_CUSTOMERVIEWTERMS AS CUSTOMERVIEWTERMS,
PROFILES.PRF_CUSTOMERVIEWCONTACTS AS CUSTOMERVIEWCONTACTS,
PROFILES.PRF_CUSTOMERVIEWATTACHMENTS AS CUSTOMERVIEWATTACHMENTS,
PROFILES.PRF_CUSTOMERVIEWNOTES AS CUSTOMERVIEWNOTES,
PROFILES.PRF_CUSTOMERADD AS CUSTOMERADD,
PROFILES.PRF_CUSTOMEREDIT AS CUSTOMEREDIT
FROM <ownerdatabase>.DBO.PROFILES
INNER JOIN <ownerdatabase>.DBO.USERPROFILE
ON PROFILES.PRF_ID = USERPROFILE.PRF_ID
WHERE USER_ID = <user>
AND   COMPANY_ID = <company>

SELECT 
CONTACT_ID AS ID,
ID_COMPANY AS COMPANY,
CUSTOMERCODE AS CUSTOMER,
CONTACT_NAME AS NAME,
CONTACT_SURNAME AS SURNAME,
CONTACT_AREA AS AREA,
CONTACT_CARGO AS CARGO,
CONTACT_EMAIL AS EMAIL,
CONTACT_ALTEREMAIL AS ALTEREMAIL,
CONTACT_TEL AS TEL,
CONTACT_FAX AS FAX,
CONTACT_BIRTHDATE AS BIRTHDATE,
CONTACT_DETAILS AS DETAILS,
CONTACT_HOBBIES AS HOBBIES,
CONTACT_CUIT AS CUIT
FROM <ownerdatabase>.DBO.CONTACTS
WHERE CONTACT_ID = <contact>


SELECT 
CONTACT_ID AS ID,
ID_COMPANY AS COMPANY,
CUSTOMERCODE AS CUSTOMER,
CONTACT_NAME AS NAME,
CONTACT_SURNAME AS SURNAME,
CONTACT_AREA AS AREA,
CONTACT_CARGO AS CARGO,
CONTACT_EMAIL AS EMAIL,
CONTACT_ALTEREMAIL AS ALTEREMAIL,
CONTACT_TEL AS TEL,
CONTACT_FAX AS FAX,
CONTACT_BIRTHDATE AS BIRTHDATE,
CONTACT_DETAILS AS DETAILS,
CONTACT_HOBBIES AS HOBBIES,
CONTACT_CUIT AS CUIT
FROM <ownerdatabase>.DBO.CONTACTS
WHERE ID_COMPANY = <company>
AND CUSTOMERCODE = '<customer>'


SELECT 
ID_CONTACT_AREA AS ID,
AREA AS NAME,
DESCRIPCION AS DESCRIPTION
FROM <ownerdatabase>.DBO.TYPECONTACT_AREA

SELECT 
ID_CONTACT_AREA AS ID,
AREA AS NAME,
DESCRIPCION AS DESCRIPTION
FROM <ownerdatabase>.DBO.TYPECONTACT_AREA
WHERE ID_CONTACT_AREA = <area>

SELECT 
ID_CONTACT_CARGO AS ID,
CARGO AS NAME,
DETAILS AS DESCRIPTION
FROM <ownerdatabase>.DBO.TYPECONTACT_CARGO

SELECT 
ID_CONTACT_CARGO AS ID,
CARGO AS NAME,
DETAILS AS DESCRIPTION
FROM <ownerdatabase>.DBO.TYPECONTACT_CARGO
WHERE ID_CONTACT_CARGO = <cargo>

IF EXISTS
(
SELECT *
FROM <ownerdatabase>.DBO.TYPECONTACT_CARGO
WHERE ID_CONTACT_CARGO = <code>
)
UPDATE <ownerdatabase>.DBO.TYPECONTACT_CARGO
SET
CARGO = '<name>',
DETAILS = '<description>'
WHERE ID_CONTACT_CARGO = <code>
ELSE
INSERT INTO <ownerdatabase>.DBO.TYPECONTACT_CARGO
(ID_CONTACT_CARGO, CARGO, DETAILS)
VALUES
(<code>, '<name>','<description>')


IF EXISTS
(
SELECT *
FROM <ownerdatabase>.DBO.TYPECONTACT_AREA
WHERE ID_CONTACT_AREA = <code>
)
UPDATE <ownerdatabase>.DBO.TYPECONTACT_AREA
SET
AREA = '<name>',
DESCRIPCION = '<description>'
WHERE ID_CONTACT_AREA = <code>
ELSE
INSERT INTO <ownerdatabase>.DBO.TYPECONTACT_AREA
(ID_CONTACT_AREA, AREA, DESCRIPCION)
VALUES
(<code>, '<name>','<description>')

SELECT 
TASK_ID AS ID
FROM <ownerdatabase>.DBO.TASK
WHERE TASK_ID_USEROWNER = <user>
AND TASK_COMPANY_ID = <company>

SELECT 
TASK_ID AS ID,
TASK_COMPANY_ID AS COMPANYID,
TASK_ID_TASK_OWNER AS OWNER,
TASK_TYPE AS INTERNALTYPE,
TASK_ID_TASKTYPE AS TASKTYPE,
TASK_ID_ACTION AS ACTION,
TASK_ID_USERINIT AS OWNER,
TASK_ID_USERPROFILE AS USERPROFILE,
TASK_ID_USEROWNER AS IDUSER,
TASK_ID_USERADMIN AS ADMIN,
TASK_ID_PRIORITY AS PRIORITY,
TASK_DETAILS AS DETAIL,
TASK_DETAILS_OWNER AS OWNERDETAIL,
TASK_INITDATE AS INITDATE,
TASK_INITHOUR AS INITTIME,
TASK_SYSTEMDATE AS SYSTEMDATE,
TASK_FIRSTDATE AS FIRSTDATE,
TASK_LASTDATE AS LASTDATE,
TASK_ID_STATUS AS STATUS
FROM <ownerdatabase>.DBO.TASK
WHERE TASK_ID = <task>


IF EXISTS
(
SELECT *
FROM <ownerdatabase>.DBO.TYPETASK_TYPE
WHERE ID_TASKTYPE = <code>
)
UPDATE <ownerdatabase>.DBO.TYPETASK_TYPE
SET
TASKTYPE_NAME = '<name>',
TASKTYPE_DESCRIPTION = '<description>'
WHERE ID_TASKTYPE = <code>
ELSE
INSERT INTO <ownerdatabase>.DBO.TYPETASK_TYPE
(ID_TASKTYPE, TASKTYPE_NAME, TASKTYPE_DESCRIPTION)
VALUES
(<code>, '<name>','<description>')


SELECT 
ID_TASKTYPE AS ID,
TASKTYPE_NAME AS NAME,
TASKTYPE_DESCRIPTION AS DESCRIPTION
FROM <ownerdatabase>.DBO.TYPETASK_TYPE

SELECT 
ID_TASKTYPE AS ID,
TASKTYPE_NAME AS NAME,
TASKTYPE_DESCRIPTION AS DESCRIPTION
FROM <ownerdatabase>.DBO.TYPETASK_TYPE
WHERE ID_TASKTYPE = <type>


IF EXISTS
(
SELECT *
FROM <ownerdatabase>.DBO.TYPETASK_PRIORITY
WHERE ID_TASKPRIORITY = <code>
)
UPDATE <ownerdatabase>.DBO.TYPETASK_PRIORITY
SET
TASKPRIORITY_NAME = '<name>',
TASKPRIORITY_DESCRIPTION = '<description>'
WHERE ID_TASKPRIORITY = <code>
ELSE
INSERT INTO <ownerdatabase>.DBO.TYPETASK_PRIORITY
(ID_TASKPRIORITY, TASKPRIORITY_NAME, TASKPRIORITY_DESCRIPTION)
VALUES
(<code>, '<name>','<description>')


SELECT 
ID_TASKPRIORITY AS ID,
TASKPRIORITY_NAME AS NAME,
TASKPRIORITY_DESCRIPTION AS DESCRIPTION
FROM <ownerdatabase>.DBO.TYPETASK_PRIORITY

SELECT 
ID_TASKPRIORITY AS ID,
TASKPRIORITY_NAME AS NAME,
TASKPRIORITY_DESCRIPTION AS DESCRIPTION
FROM <ownerdatabase>.DBO.TYPETASK_PRIORITY
WHERE ID_TASKPRIORITY = <priority>


SELECT 
ID_TYPETASK_STATE AS ID,
TASKSTATE_NAME AS NAME,
TASKSTATE_DESCRIPTION AS DESCRIPTION
FROM <ownerdatabase>.DBO.TYPETASK_STATE

SELECT 
ID_TYPETASK_STATE AS ID,
TASKSTATE_NAME AS NAME,
TASKSTATE_DESCRIPTION AS DESCRIPTION
FROM <ownerdatabase>.DBO.TYPETASK_STATE
WHERE ID_TYPETASK_STATE = <state>



SELECT 
TASKENTITY_ID AS ID,
TASKENTITY_IDTASK AS IDTASK,
TASKENTITY_ENTITYTYPE AS ENTITYTYPE,
TASKENTITY_ENTITYCODE AS ENTITYCODE
FROM <ownerdatabase>.DBO.TASKENTITIES
WHERE TASKENTITY_IDTASK = <task>


SELECT 
TASKEVENT_ID AS ID,
TASKEVENT_TASKID AS IDTASK,
TASKEVENT_DATE AS EVENTDATE,
TASKEVENT_TYPE AS EVENTTYPE,
TASKEVENT_DETAIL AS DETAIL,
TASKEVENT_USER AS USERID
FROM <ownerdatabase>.DBO.TASKEVENTS
WHERE TASKEVENT_TASKID = <task>




IF EXISTS
(
SELECT *
FROM <ownerdatabase>.DBO.TYPEEVENT_TYPE
WHERE ID_EVENTTYPE = <code>
)
UPDATE <ownerdatabase>.DBO.TYPEEVENT_TYPE
SET
EVENTTYPE_NAME = '<name>',
EVENTTYPE_DESCRIPTION = '<description>'
WHERE ID_EVENTTYPE = <code>
ELSE
INSERT INTO <ownerdatabase>.DBO.TYPEEVENT_TYPE
(ID_EVENTTYPE, EVENTTYPE_NAME, EVENTTYPE_DESCRIPTION)
VALUES
(<code>, '<name>','<description>')


SELECT 
ID_EVENTTYPE AS ID,
EVENTTYPE_NAME AS NAME,
EVENTTYPE_DESCRIPTION AS DESCRIPTION
FROM <ownerdatabase>.DBO.TYPEEVENT_TYPE

SELECT 
ID_EVENTTYPE AS ID,
EVENTTYPE_NAME AS NAME,
EVENTTYPE_DESCRIPTION AS DESCRIPTION
FROM <ownerdatabase>.DBO.TYPEEVENT_TYPE
WHERE ID_EVENTTYPE = <type>


UPDATE <ownerdatabase>.DBO.TASK
SET TASK_ID_STATUS = <state>,
TASK_LASTDATE = CONVERT(DATETIME, {fn NOW()}, 102)
WHERE TASK_ID = <task>


INSERT INTO  <ownerdatabase>.dbo.taskevents
(taskevent_taskid,taskevent_date, taskevent_type, taskevent_detail, taskevent_user)
VALUES
(<task>, CONVERT(DATETIME, {fn NOW()}, 102), <eventtype>, '<detail>', <user>)


IF NOT EXISTS
(
SELECT *
FROM <ownerdatabase>.DBO.TASKENTITIES
WHERE TASKENTITY_IDTASK = <task>
AND TASKENTITY_ENTITYTYPE = <entitytype>
AND TASKENTITY_ENTITYCODE = '<entitycode>'
)
INSERT INTO <ownerdatabase>.DBO.TASKENTITIES
(TASKENTITY_IDTASK, TASKENTITY_ENTITYTYPE, TASKENTITY_ENTITYCODE)
VALUES
(<task>, <entitytype>, '<entitycode>')


DELETE FROM <ownerdatabase>.DBO.TASKENTITIES
WHERE TASKENTITY_IDTASK = <task>
AND TASKENTITY_ENTITYTYPE = <entitytype>
AND TASKENTITY_ENTITYCODE = '<entitycode>'



SELECT     
TASK.TASK_ID AS ID, 
TYPETASK_TYPE.TASKTYPE_NAME,
TASK.TASK_DETAILS AS DETAIL, 
TASK.TASK_DETAILS_OWNER AS OWNERDETAIL,
TYPETASK_STATE.TASKSTATE_NAME,
TYPETASK_PRIORITY.TASKPRIORITY_NAME, 
TASK.TASK_INITDATE AS INITDATE,
TASK.TASK_LASTDATE AS LASTDATE,
USERS.USER_LOGIN AS OWNER
FROM <ownerdatabase>.DBO.TASK 
LEFT OUTER JOIN <ownerdatabase>.DBO.TYPETASK_TYPE 
ON TASK.TASK_ID_TASKTYPE = TYPETASK_TYPE.ID_TASKTYPE 
LEFT OUTER JOIN <ownerdatabase>.DBO.USERS 
ON TASK.TASK_ID_USERINIT = USERS.USER_ID 
LEFT OUTER JOIN <ownerdatabase>.DBO.TYPETASK_STATE 
ON TASK.TASK_ID_STATUS = TYPETASK_STATE.ID_TYPETASK_STATE 
LEFT OUTER JOIN <ownerdatabase>.DBO.TYPETASK_PRIORITY 
ON TASK.TASK_ID_PRIORITY = TYPETASK_PRIORITY.ID_TASKPRIORITY 
LEFT OUTER JOIN <ownerdatabase>.DBO.PROFILES 
ON TASK.TASK_ID_USERPROFILE = PROFILES.PRF_ID
WHERE TASK.TASK_ID_USEROWNER = <user>



SELECT 1 AS SORTORDER, 'CODIGO' AS NOMBRE, 'TASK.TASK_ID' AS FIELD, 100 AS WIDTH
UNION
SELECT 2 AS SORTORDER, 'TIPO DE TAREA' AS NOMBRE, 'TYPETASK_TYPE.TASKTYPE_NAME' AS FIELD, 100 AS WIDTH
UNION
SELECT 3 AS SORTORDER, 'DETALLE' AS NOMBRE, 'TASK.TASK_DETAILS' AS FIELD, 500 AS WIDTH
UNION
SELECT 4 AS SORTORDER, 'DETALLE INICIAL' AS NOMBRE, 'TASK.TASK_DETAILS_OWNER' AS FIELD, 500 AS WIDTH
UNION
SELECT 5 AS SORTORDER, 'ESTADO' AS NOMBRE, 'TYPETASK_STATE.TASKSTATE_NAME' AS FIELD, 100 AS WIDTH
UNION
SELECT 6 AS SORTORDER, 'PRIORIDAD' AS NOMBRE, 'TYPETASK_PRIORITY.TASKPRIORITY_NAME' AS FIELD, 100 AS WIDTH
UNION
SELECT 7 AS SORTORDER, 'FECHA DE INICIO' AS NOMBRE, 'TASK.TASK_INITDATE' AS FIELD, 100 AS WIDTH
UNION
SELECT 8 AS SORTORDER, 'CREADOR' AS NOMBRE, 'USERS.USER_LOGIN' AS FIELD, 100 AS WIDTH


SELECT 
TASK_ID AS ID,
TASK_COMPANY_ID AS COMPANYID,
TASK_ID_TASK_OWNER AS OWNER,
TASK_TYPE AS INTERNALTYPE,
TASK_ID_TASKTYPE AS TASKTYPE,
TASK_ID_ACTION AS ACTION,
TASK_ID_USERINIT AS OWNER,
TASK_ID_USERPROFILE AS USERPROFILE,
TASK_ID_USEROWNER AS IDUSER,
TASK_ID_USERADMIN AS ADMIN,
TASK_ID_PRIORITY AS PRIORITY,
TASK_DETAILS AS DETAIL,
TASK_DETAILS_OWNER AS OWNERDETAIL,
TASK_INITDATE AS INITDATE,
TASK_INITHOUR AS INITTIME,
TASK_SYSTEMDATE AS SYSTEMDATE,
TASK_FIRSTDATE AS FIRSTDATE,
TASK_LASTDATE AS LASTDATE,
TASK_ID_STATUS AS STATUS
FROM <ownerdatabase>.DBO.TASK
WHERE TASK_ID_USEROWNER = <user>
AND TASK_ID_STATUS = 1
AND TASK_COMPANY_ID = <company>
ORDER BY TASK_INITDATE, TASK_INITHOUR



UPDATE <ownerdatabase>.DBO.ALERTS
SET ALERTS.ALERT_ACTIVE = 0
WHERE ALERTS.ALERT_ID = <alert>


UPDATE <ownerdatabase>.DBO.ALERTS
SET ALERTS.ALERT_EXECUTE = DATEADD(mi, <minutes>, CONVERT(DATETIME, {fn NOW()}, 102)),
ALERTS.ALERT_WAITTIMETYPE = <timetype>
WHERE ALERTS.ALERT_ID = <alert>

SELECT 
TIMETYPES.ALERT_WAITTIMETYPE AS ID,
TIMETYPES.DETAILS AS NAME,
TIMETYPES.MINUTES AS MINUTES
FROM <ownerdatabase>.DBO.ALERT_TIMETYPE TIMETYPES


SELECT 
USERPROFILE.USER_DOMAINFULL AS FULLUSER
FROM <ownerdatabase>.DBO.USERPROFILE
WHERE USERPROFILE.PRF_ID = <profile>
AND USERPROFILE.USER_ID = <user>
AND USERPROFILE.COMPANY_ID = <company>

UPDATE <ownerdatabase>.DBO.USERPROFILE
SET USERPROFILE.USER_DOMAINFULL = <fulldomain>
WHERE USERPROFILE.PRF_ID = <profile>
AND USERPROFILE.USER_ID = <user>
AND USERPROFILE.COMPANY_ID = <company>


SELECT 
USERPROFILE.USER_PROFILEOWNER AS PROFILEOWNER
FROM <ownerdatabase>.DBO.USERPROFILE
WHERE USERPROFILE.PRF_ID = <profile>
AND USERPROFILE.USER_ID = <user>
AND USERPROFILE.COMPANY_ID = <company>

UPDATE <ownerdatabase>.DBO.USERPROFILE
SET USERPROFILE.USER_PROFILEOWNER = <profileowner>
WHERE USERPROFILE.PRF_ID = <profile>
AND USERPROFILE.USER_ID = <user>
AND USERPROFILE.COMPANY_ID = <company>




IF EXISTS
(
SELECT *
FROM <ownerdatabase>.DBO.TYPECUSTOMER_CANCELREASSONS
WHERE ID_CUSTOMERCANCELREASSON = <code>
)
UPDATE <ownerdatabase>.DBO.TYPECUSTOMER_CANCELREASSONS
SET
CANCELREASSON_NAME = '<name>',
CANCELREASSON_DESCRIPTION = '<description>'
WHERE ID_CUSTOMERCANCELREASSON = <code>
ELSE
INSERT INTO <ownerdatabase>.DBO.TYPECUSTOMER_CANCELREASSONS
(ID_CUSTOMERCANCELREASSON, CANCELREASSON_NAME, CANCELREASSON_DESCRIPTION)
VALUES
(<code>, '<name>','<description>')


SELECT 
ID_CUSTOMERCANCELREASSON AS ID,
CANCELREASSON_NAME AS NAME,
CANCELREASSON_DESCRIPTION AS DESCRIPTION
FROM <ownerdatabase>.DBO.TYPECUSTOMER_CANCELREASSONS

SELECT 
ID_CUSTOMERCANCELREASSON AS ID,
CANCELREASSON_NAME AS NAME,
CANCELREASSON_DESCRIPTION AS DESCRIPTION
FROM <ownerdatabase>.DBO.TYPECUSTOMER_CANCELREASSONS
WHERE ID_CUSTOMERCANCELREASSON = <reasson>



SELECT COUNT (*)
FROM <ownerdatabase>.DBO.CUSTOMERSDELETED
WHERE ID_COMPANY = <company>,
POTENTIALCUSTOMER = <potential> 
AND CUSTOMERCODE = '<code>'
AND PROCESSED <> 0

INSERT INTO <ownerdatabase>.DBO.CUSTOMERSDELETED
(ID_COMPANY, POTENTIALCUSTOMER, CUSTOMERCODE, CANCELDATE, REASSONCODE, USERID)
VALUES
(<company>, <potential>, '<code>', CONVERT(DATETIME, '<date>', 102), <reasson>, <user>)
 


SELECT 
'POTENCIAL' AS TYPE,
CUSTOMERSDELETED.CUSTOMERCODE AS CODE,
POTENTIALCUSTOMERS.RAZON_SOCI AS LEGALNAME,
CUSTOMERSDELETED.CANCELDATE AS CANCELDATE,
TYPECUSTOMER_CANCELREASSONS.CANCELREASSON_NAME AS REASSONNAME,
USERS.USER_LOGIN AS USERNAME
FROM <ownerdatabase>.DBO.CUSTOMERSDELETED
INNER JOIN <ownerdatabase>.DBO.POTENTIALCUSTOMERS
ON CUSTOMERSDELETED.CUSTOMERCODE = POTENTIALCUSTOMERS.COD_CLIENT COLLATE Latin1_General_BIN
INNER JOIN <ownerdatabase>.DBO.TYPECUSTOMER_CANCELREASSONS
ON CUSTOMERSDELETED.REASSONCODE = TYPECUSTOMER_CANCELREASSONS.ID_CUSTOMERCANCELREASSON
INNER JOIN <ownerdatabase>.DBO.USERS
ON CUSTOMERSDELETED.USERID = USERS.USER_ID
WHERE CUSTOMERSDELETED.POTENTIALCUSTOMER <> 0
AND CUSTOMERSDELETED.PROCESSED = 0  
AND CUSTOMERSDELETED.ID_COMPANY = <company>  
UNION
SELECT 
'REAL' AS TYPE,
CUSTOMERSDELETED.CUSTOMERCODE AS CODE,
CUSTOMERS.RAZON_SOCI AS LEGALNAME,
CUSTOMERSDELETED.CANCELDATE AS CANCELDATE,
TYPECUSTOMER_CANCELREASSONS.CANCELREASSON_NAME AS REASSONNAME,
USERS.USER_LOGIN AS USERNAME
FROM <ownerdatabase>.DBO.CUSTOMERSDELETED
INNER JOIN <database>.DBO.GVA14 CUSTOMERS
ON CUSTOMERSDELETED.CUSTOMERCODE = CUSTOMERS.COD_CLIENT COLLATE Latin1_General_BIN
INNER JOIN <ownerdatabase>.DBO.TYPECUSTOMER_CANCELREASSONS
ON CUSTOMERSDELETED.REASSONCODE = TYPECUSTOMER_CANCELREASSONS.ID_CUSTOMERCANCELREASSON
INNER JOIN <ownerdatabase>.DBO.USERS
ON CUSTOMERSDELETED.USERID = USERS.USER_ID
WHERE CUSTOMERSDELETED.POTENTIALCUSTOMER = 0
AND CUSTOMERSDELETED.PROCESSED = 0  
AND CUSTOMERSDELETED.ID_COMPANY = <company>  

-- TASK BY CUSTOMER

SELECT TASK.TASK_ID
FROM <ownerdatabase>.DBO.TASK
INNER JOIN <ownerdatabase>.DBO.TASKENTITIES
ON TASK.TASK_ID = TASKENTITIES.TASKENTITY_IDTASK
WHERE TASK_COMPANY_ID = <company>
AND   TASKENTITY_ENTITYTYPE = <entitytype> 
AND   TASKENTITY_ENTITYCODE = '<entitycode>' 


-- USERS HEADERS
SELECT 
1 AS SORTORDER, 'CODIGO' AS NOMBRE, 'USER_ID' AS FIELD, 100 AS WIDTH 
UNION 
SELECT 
2 AS SORTORDER, 'NOMBRE' AS NOMBRE, 'USER_LOGIN' AS FIELD, 500 AS WIDTH


SELECT USER_ID, USER_LOGIN
FROM <ownerdatabase>.DBO.USERS



-- TASK TYPES HEADERS
SELECT 
1 AS SORTORDER, 'CODIGO' AS NOMBRE, 'ID_TASKTYPE' AS FIELD, 100 AS WIDTH 
UNION 
SELECT 
2 AS SORTORDER, 'NOMBRE' AS NOMBRE, 'TASKTYPE_NAME' AS FIELD, 500 AS WIDTH
UNION 
SELECT 
3 AS SORTORDER, 'DESCRIPCION' AS NOMBRE, 'TASKTYPE_DESCRIPTION' AS FIELD, 500 AS WIDTH


-- EVENT TYPES HEADERS
SELECT 
1 AS SORTORDER, 'CODIGO' AS NOMBRE, 'ID_EVENTTYPE' AS FIELD, 100 AS WIDTH 
UNION 
SELECT 
2 AS SORTORDER, 'NOMBRE' AS NOMBRE, 'EVENTTYPE_NAME' AS FIELD, 500 AS WIDTH
UNION 
SELECT 
3 AS SORTORDER, 'DESCRIPCION' AS NOMBRE, 'EVENTTYPE_DESCRIPTION' AS FIELD, 500 AS WIDTH



-- TASK STATES HEADERS
SELECT 
1 AS SORTORDER, 'CODIGO' AS NOMBRE, 'ID_TYPETASK_STATE' AS FIELD, 100 AS WIDTH 
UNION 
SELECT 
2 AS SORTORDER, 'NOMBRE' AS NOMBRE, 'TASKSTATE_NAME' AS FIELD, 500 AS WIDTH
UNION 
SELECT 
3 AS SORTORDER, 'DESCRIPCION' AS NOMBRE, 'TASKSTATE_DESCRIPTION' AS FIELD, 500 AS WIDTH


SELECT USER_ID, USER_LOGIN
FROM <ownerdatabase>.DBO.USERS



--RPTTASKLIST

SELECT  
USERS.USER_LOGIN AS USERNAME,  
TASK.TASK_INITDATE AS INITDATE, 
TASK.TASK_INITHOUR AS INITTIME, 
TASKTYPE_NAME AS TYPE, 
TASKSTATE_NAME AS STATE 
FROM <ownerdatabase>.DBO.TASK 
INNER JOIN <ownerdatabase>.DBO.USERS 
ON TASK.TASK_ID_USEROWNER = USERS.USER_ID  
INNER JOIN <ownerdatabase>.DBO.TYPETASK_TYPE 
ON TASK.TASK_ID_TASKTYPE = TYPETASK_TYPE.ID_TASKTYPE 
INNER JOIN <ownerdatabase>.DBO.TYPETASK_STATE 
ON TASK.TASK_ID_STATUS = TYPETASK_STATE.ID_TYPETASK_STATE 
WHERE TASK_TYPE = 3 
AND TASK_COMPANY_ID = <company> 
AND TASK_ID_USEROWNER BETWEEN <userfrom> AND <userto> 
AND TASK_INITDATE BETWEEN CONVERT(DATETIME, '<datefrom>', 102) AND CONVERT(DATETIME, '<dateto>', 102) 
AND TASK_ID_TASKTYPE BETWEEN <typefrom> AND <typeto> 
AND TASK_ID_STATUS BETWEEN <statefrom> AND <stateto> 
ORDER BY USERNAME, INITDATE, INITTIME




--RPTEVENTLIST

SELECT  
USERS.USER_LOGIN AS USERNAME,  
TASKEVENTS.TASKEVENT_DATE AS INITDATE, 
TASK.TASK_INITHOUR AS INITTIME, 
TASKTYPE_NAME AS TYPE, 
TASKSTATE_NAME AS STATE,
TYPEEVENT_TYPE.EVENTTYPE_NAME AS EVENTTYPE,
TASKEVENT_DETAIL AS EVENTDETAIL  
FROM <ownerdatabase>.DBO.TASK 
INNER JOIN <ownerdatabase>.DBO.USERS 
ON TASK.TASK_ID_USEROWNER = USERS.USER_ID  
INNER JOIN <ownerdatabase>.DBO.TYPETASK_TYPE 
ON TASK.TASK_ID_TASKTYPE = TYPETASK_TYPE.ID_TASKTYPE 
INNER JOIN <ownerdatabase>.DBO.TYPETASK_STATE 
ON TASK.TASK_ID_STATUS = TYPETASK_STATE.ID_TYPETASK_STATE 
INNER JOIN <ownerdatabase>.DBO.TASKEVENTS
ON TASK.TASK_ID = TASKEVENTS.TASKEVENT_TASKID
INNER JOIN <ownerdatabase>.DBO.TYPEEVENT_TYPE
ON TASKEVENTS.TASKEVENT_TYPE = TYPEEVENT_TYPE.ID_EVENTTYPE
WHERE TASK_TYPE = 3
AND TASK_COMPANY_ID = <company> 
AND TASK_ID_USEROWNER BETWEEN <userfrom> AND <userto> 
AND TASKEVENT_DATE BETWEEN CONVERT(DATETIME, '<datefrom>', 102) AND CONVERT(DATETIME, '<dateto>', 102) 
AND TASK_ID_TASKTYPE BETWEEN <typefrom> AND <typeto> 
AND TASK_ID_STATUS BETWEEN <statefrom> AND <stateto> 
AND TASKEVENT_TYPE BETWEEN <eventfrom> AND <eventto>
ORDER BY USERNAME, INITDATE, INITTIME



--RPTTASKDETAILS

SELECT  
USERS.USER_LOGIN AS USERNAME,  
TASK.TASK_INITDATE AS INITDATE, 
TASK.TASK_INITHOUR AS INITTIME, 
TASKTYPE_NAME AS TYPE, 
TASKSTATE_NAME AS STATE,
TASK_DETAILS AS TASKDETAILS,
TASKEVENTS.TASKEVENT_DATE AS EVENTDATE,
TYPEEVENT_TYPE.EVENTTYPE_NAME AS EVENTTYPE,
TASKEVENT_DETAIL AS EVENTDETAIL 
FROM <ownerdatabase>.DBO.TASK 
INNER JOIN <ownerdatabase>.DBO.USERS 
ON TASK.TASK_ID_USEROWNER = USERS.USER_ID  
INNER JOIN <ownerdatabase>.DBO.TYPETASK_TYPE 
ON TASK.TASK_ID_TASKTYPE = TYPETASK_TYPE.ID_TASKTYPE 
INNER JOIN <ownerdatabase>.DBO.TYPETASK_STATE 
ON TASK.TASK_ID_STATUS = TYPETASK_STATE.ID_TYPETASK_STATE 
INNER JOIN <ownerdatabase>.DBO.TASKEVENTS
ON TASK.TASK_ID = TASKEVENTS.TASKEVENT_TASKID
INNER JOIN <ownerdatabase>.DBO.TYPEEVENT_TYPE
ON TASKEVENTS.TASKEVENT_TYPE = TYPEEVENT_TYPE.ID_EVENTTYPE
WHERE TASK_TYPE = 3 
AND TASK_COMPANY_ID = <company> 
AND TASK_ID_USEROWNER BETWEEN <userfrom> AND <userto> 
AND TASK_INITDATE BETWEEN CONVERT(DATETIME, '<datefrom>', 102) AND CONVERT(DATETIME, '<dateto>', 102) 
AND TASK_ID_TASKTYPE BETWEEN <typefrom> AND <typeto> 
AND TASK_ID_STATUS BETWEEN <statefrom> AND <stateto> 
ORDER BY USERNAME, INITDATE, INITTIME


-- RPTCUSTOMERSTASKSDETAIL

SELECT 
USERS.USER_LOGIN AS USERNAME,  
TASK.TASK_INITDATE AS INITDATE, 
TASK.TASK_INITHOUR AS INITTIME, 
TASKTYPE_NAME AS TYPE, 
TASKSTATE_NAME AS STATE,
'POTENCIAL' AS CUSTOMERTYPE,
TASKENTITIES.TASKENTITY_ENTITYCODE AS CUSTOMERCODE,
POTENTIALCUSTOMERS.RAZON_SOCI AS CUSTOMERNAME,
TYPEEVENT_TYPE.EVENTTYPE_NAME AS EVENTTYPE,
TASKEVENT_DETAIL AS EVENTDETAIL 
FROM CRM.DBO.TASK 
INNER JOIN CRM.DBO.USERS 
ON TASK.TASK_ID_USEROWNER = USERS.USER_ID  
INNER JOIN CRM.DBO.TYPETASK_TYPE 
ON TASK.TASK_ID_TASKTYPE = TYPETASK_TYPE.ID_TASKTYPE 
INNER JOIN CRM.DBO.TYPETASK_STATE 
ON TASK.TASK_ID_STATUS = TYPETASK_STATE.ID_TYPETASK_STATE 
INNER JOIN CRM.DBO.TASKEVENTS
ON TASK.TASK_ID = TASKEVENTS.TASKEVENT_TASKID
INNER JOIN CRM.DBO.TYPEEVENT_TYPE
ON TASKEVENTS.TASKEVENT_TYPE = TYPEEVENT_TYPE.ID_EVENTTYPE
INNER JOIN CRM.DBO.TASKENTITIES
ON TASK.TASK_ID = TASKENTITIES.TASKENTITY_IDTASK
INNER JOIN CRM.DBO.POTENTIALCUSTOMERS
ON TASKENTITIES.TASKENTITY_ENTITYCODE = POTENTIALCUSTOMERS.COD_CLIENT COLLATE Latin1_General_BIN
WHERE TASK_TYPE = 3 
AND TASKENTITY_ENTITYTYPE = 4
AND TASK_COMPANY_ID = <company> 
AND TASK_ID_USEROWNER BETWEEN <userfrom> AND <userto> 
AND TASKEVENT_DATE BETWEEN CONVERT(DATETIME, '<datefrom>', 102) AND CONVERT(DATETIME, '<dateto>', 102) 
AND TASK_ID_TASKTYPE BETWEEN <typefrom> AND <typeto> 
AND TASK_ID_STATUS BETWEEN <statefrom> AND <stateto> 
AND TASKEVENT_TYPE BETWEEN <eventfrom> AND <eventto>
AND POTENTIALCUSTOMERS.COD_CLIENT BETWEEN '<customerfrom>' AND '<customerto>'

UNION ALL

SELECT 
USERS.USER_LOGIN AS USERNAME,  
TASK.TASK_INITDATE AS INITDATE, 
TASK.TASK_INITHOUR AS INITTIME, 
TASKTYPE_NAME AS TYPE, 
TASKSTATE_NAME AS STATE,
'REAL' AS CUSTOMERTYPE,
TASKENTITIES.TASKENTITY_ENTITYCODE AS CUSTOMERCODE,
CUSTOMERS.RAZON_SOCI AS CUSTOMERNAME,
TYPEEVENT_TYPE.EVENTTYPE_NAME AS EVENTTYPE,
TASKEVENT_DETAIL AS EVENTDETAIL 
FROM CRM.DBO.TASK 
INNER JOIN CRM.DBO.USERS 
ON TASK.TASK_ID_USEROWNER = USERS.USER_ID  
INNER JOIN CRM.DBO.TYPETASK_TYPE 
ON TASK.TASK_ID_TASKTYPE = TYPETASK_TYPE.ID_TASKTYPE 
INNER JOIN CRM.DBO.TYPETASK_STATE 
ON TASK.TASK_ID_STATUS = TYPETASK_STATE.ID_TYPETASK_STATE 
INNER JOIN CRM.DBO.TASKEVENTS
ON TASK.TASK_ID = TASKEVENTS.TASKEVENT_TASKID
INNER JOIN CRM.DBO.TYPEEVENT_TYPE
ON TASKEVENTS.TASKEVENT_TYPE = TYPEEVENT_TYPE.ID_EVENTTYPE
INNER JOIN CRM.DBO.TASKENTITIES
ON TASK.TASK_ID = TASKENTITIES.TASKENTITY_IDTASK
INNER JOIN EMPRESA_EJEMPLO.DBO.GVA14 CUSTOMERS
ON TASKENTITIES.TASKENTITY_ENTITYCODE = CUSTOMERS.COD_CLIENT COLLATE Latin1_General_BIN
WHERE TASK_TYPE = 3 
AND TASKENTITY_ENTITYTYPE = 1
AND TASK_COMPANY_ID = <company> 
AND TASK_ID_USEROWNER BETWEEN <userfrom> AND <userto> 
AND TASKEVENT_DATE BETWEEN CONVERT(DATETIME, '<datefrom>', 102) AND CONVERT(DATETIME, '<dateto>', 102) 
AND TASK_ID_TASKTYPE BETWEEN <typefrom> AND <typeto> 
AND TASK_ID_STATUS BETWEEN <statefrom> AND <stateto> 
AND TASKEVENT_TYPE BETWEEN <eventfrom> AND <eventto>
AND CUSTOMERS.COD_CLIENT BETWEEN '<customerfrom>' AND '<customerto>'

-- NEXTPCODE
SELECT MAX(COD_CLIENT)
FROM <ownerdatabase>.DBO.POTENTIALCUSTOMERS
